{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/vscode-plugin-自定义vscode插件-架构分析.png","path":"css/images/vscode-plugin-自定义vscode插件-架构分析.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/vscode主要构成.png","path":"css/images/vscode主要构成.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/vscode-plugin-自定义vscode插件1.md","hash":"f3e982aa68a6edff00631b7a0f82edac12156bc3","modified":1642418249637},{"_id":"source/_posts/vscode插件开发2-command+menu+keybindings.md","hash":"f0648e8b80f86da8e2705b5d45a726806d0af71e","modified":1642489972451},{"_id":"source/_posts/vscode插件开发-webview.md","hash":"75920fe61a4ebf7ede670fc93f61ef14ecc369be","modified":1642993931797},{"_id":"source/_posts/vscode插件打包、发布、升级.md","hash":"666f36d91897c0643e53e339021b4a9df42e8dea","modified":1642738203781},{"_id":"source/_posts/vscode插件开发3-跳转、补全、提示.md","hash":"1d26611805603ccd1389a4b001de234474ccc4de","modified":1642736540374},{"_id":"source/_posts/搭建个人博客-git-and-hexo.md","hash":"a324d4999894234c9a06346ef8e76dbe84465505","modified":1641801913106},{"_id":"source/.DS_Store","hash":"5ca227a0bdd6c38f22681c54ffc6d947c4bbb485","modified":1650277036542},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1641799976484},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1641799976484},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1641799976484},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1641799976484},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1641799976485},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1641799976485},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1641799976486},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1641799976486},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1641799976485},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1641799976486},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1641799976486},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1641799976487},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1641799976486},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1641799976487},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1641799976487},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1641799976487},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1641799976485},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1641799976487},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1641799976487},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1641799976484},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1641799976488},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1641799976488},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1641799976488},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1641799976489},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1641799976489},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1641799976489},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1641799976489},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1641799976489},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1641799976489},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1641799976489},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1641799976488},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1641799976490},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1641799976484},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1641799976490},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1641799976484},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1641799976489},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1641799976490},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1641799976484},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1641799976490},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1641799976490},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1641799976493},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1641799976490},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1641799976494},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1641799976494},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1641799976492},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1641799976491},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1641799976492},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1641799976492},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1641799976493},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1641799976492},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1641799976490},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1641799976492},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1641799976493},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1641799976491},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1641799976491},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1641799976491},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1641799976491},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1641799976492},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1641799976491},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1641799976495},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1641799976492},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1641799976495},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1641799976496},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1641799976496},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1641799976488},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1641799976495},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1641799976496},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1641799976496},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1641799976494},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1641799976497},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1641799976496},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1641799976496},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1641799976493},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1641799976494},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1641799976497},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1641799976497},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1641799976493},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1641799976494},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1641799976495},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1641799976495},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1641799976495},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1641799976495},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1641799976498},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1641799976496},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1641799976498},{"_id":"themes/landscape/source/css/images/vscode-plugin-自定义vscode插件-架构分析.png","hash":"5a0784ebd237ac9f380b0bd242fdaa35ecf6ae19","modified":1642407942614},{"_id":"themes/landscape/source/css/images/vscode主要构成.png","hash":"ab58d9eb4d6f80531954605f603e5ff763e4fd6c","modified":1642407948288},{"_id":"public/2022/01/18/vscode插件开发3-跳转、补全、提示/index.html","hash":"917c13f329934649fe64c8ceeca60eb7c0669ee0","modified":1648457581394},{"_id":"public/2022/01/10/搭建个人博客-git-and-hexo/index.html","hash":"1440c2fb49da46bb2e8a2a6bfc446fcbc4739679","modified":1648457581394},{"_id":"public/archives/index.html","hash":"d42aef49f9590fb6f971d0517578587994929d6f","modified":1648457581394},{"_id":"public/2022/01/21/vscode插件打包、发布、升级/index.html","hash":"cd380c123e8899ec78344189e041c88e6c874dcb","modified":1648457581394},{"_id":"public/archives/2022/01/index.html","hash":"2363db72ba4d1254529f51151b2cf50153bd5255","modified":1648457581394},{"_id":"public/archives/2022/index.html","hash":"df755cc7cfa59edded38f448a6eab82aa6ae16f4","modified":1648457581394},{"_id":"public/tags/vscode-extensions-webview/index.html","hash":"26e1f939d839e8fe7ffe14bb566bb14b2d19b424","modified":1648457581394},{"_id":"public/tags/viscose-extension-跳转到定义-自动补全-悬停提示/index.html","hash":"cf7d031b064d61d88fb18b6a1648675592c1951b","modified":1648457581394},{"_id":"public/tags/vscode-extensions-publish-package/index.html","hash":"865130a732a803bdfb36693726f76c6c748a038f","modified":1648457581394},{"_id":"public/tags/git-hexo/index.html","hash":"d671393a55c000e6da4d02cc44d849e58c09f649","modified":1648457581394},{"_id":"public/2022/01/21/vscode插件开发-webview/index.html","hash":"dffe5f2cd0bd9074e44e5bde9b0fad465fe94e5a","modified":1648457581394},{"_id":"public/2022/01/17/vscode插件开发2-command+menu+keybindings/index.html","hash":"28acfaa176d86b8047dc989e1564b655a54f1d33","modified":1648457581394},{"_id":"public/2022/01/14/vscode-plugin-自定义vscode插件1/index.html","hash":"943faa5ff1d2a942424a2e71104c08c4e81b3af1","modified":1648457581394},{"_id":"public/index.html/index.html","hash":"276436d5a424c4767c5b0c22767efe53b872f081","modified":1650277141459},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1642994009370},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1642994009370},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1642994009370},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1642994009370},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1642994009370},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1642994009370},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1642994009370},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1642994009370},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1642994009370},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1642994009370},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1642994009370},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1642994009370},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1642994009370},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1642994009370},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1642994009370},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1642994009370},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1642994009370},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1642994009370},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1642994009370},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1642994009370},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1642994009370},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1642994009370},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1642994009370},{"_id":"public/css/images/vscode-plugin-自定义vscode插件-架构分析.png","hash":"5a0784ebd237ac9f380b0bd242fdaa35ecf6ae19","modified":1642994009370},{"_id":"public/css/images/vscode主要构成.png","hash":"ab58d9eb4d6f80531954605f603e5ff763e4fd6c","modified":1642994009370},{"_id":"source/_posts/class-extends-and-implements-的区别.md","hash":"3545e7319f33a6bfb7d68238b952d744a619b685","modified":1646882702420},{"_id":"source/_posts/vs-extension-tree-view.md","hash":"d26517a4d4da4643978b76b550d17687bc4a7134","modified":1648006736253},{"_id":"public/2022/03/10/class-extends-and-implements-的区别/index.html","hash":"6b20f2472ab76750f92ec9a8a9c946799a1ccd1b","modified":1648457581394},{"_id":"public/2022/03/10/vs-extension-tree-view/index.html","hash":"73eb5c1e3a6b845afca3220e536251c2ad547a2a","modified":1648457581394},{"_id":"public/archives/2022/03/index.html","hash":"4ba413684632aceb672dce6e90b9df1e31999563","modified":1648457581394},{"_id":"public/tags/class-extends-and-implements/index.html","hash":"92fc50fb4cf67e298a1682357a0e22a6401fdb0a","modified":1648457581394},{"_id":"public/tags/vs-extension/index.html","hash":"ff2ee64593079fcfcd122a0b91080f84d253ddbd","modified":1648457581394},{"_id":"source/_posts/RESTful-架构.md","hash":"78fd391dc589a0ef9b0e1b0ccfc27bf5b2adce10","modified":1648006655522},{"_id":"public/2022/03/23/RESTful-架构/index.html","hash":"d40154cb706d4dd7a9277c62eebe02d420a52bc3","modified":1648457581394},{"_id":"public/tags/RESTful-架构/index.html","hash":"6a932fcb33069faee2e3f1a7d1f491d99008d791","modified":1648457581394},{"_id":"source/_posts/状态管理工具总结和比较.md","hash":"0c5a4faa03b623970e9d59ff495a3df0bd2bfb81","modified":1650277118236},{"_id":"public/2022/03/28/状态管理工具总结和比较/index.html","hash":"ccb857d6f6b22495dacfecaa41b3b4bb6ebb77ec","modified":1650277141459},{"_id":"public/tags/状态管理工具，redux-flux/index.html","hash":"475c233de2e2eaca6a8569a6be789931243845ac","modified":1648457581394}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"自定义vscode插件","date":"2022-01-14T08:24:00.000Z","Tags":"vscode, typescript, extensions","_content":"\n# VScode组成结构\n\nVSCode 是基于 Electron 构建的，主要由三部分构成：\n\n- Electron: UI\n\n- - Monaco Editor\n  - Extension Host\n\n- Language Server Protocol & Debug Adapter Protocol\n\n# 插件生命周期\n\n从生命周期上来看，插件编写有三大个部分：\n\n- **Activation Event**：设置插件激活的时机。位于 package.json 中。\n- **Contribution Point**：设置在 VSCode 中哪些地方添加新功能，也就是这个插件增强了哪些功能。位于 package.json 中。\n- **Register**：在 `extension.ts` 中给要写的功能用 `vscode.commands.register...` 给 `Activation Event` 或 `Contribution Point` 中配置的事件绑定方法或者设置监听器。位于入口文件（默认是 `extension.ts`）的 `activate()` 函数中。\n\n### packages.json\n\npackage 中和插件有关的主要内容是如下几个项目，其中 main 是插件代码的入口文件。\n\n```json\n\"activationEvents\": [\n        \"onCommand:extension.helloWorld\"\n    ],\n    \"main\": \"./out/extension.js\",\n    \"contributes\": {\n        \"commands\": [\n            {\n                \"command\": \"extension.helloWorld\",\n                \"title\": \"Hello World\"\n            },\n            {\n                \"command\": \"extension.helloVscode\",\n                \"title\": \"Hello vscode\"\n            }\n        ]\n    },\n```\n\n- activationEvents: 配置插件什么时候被激活， 目前支持下面8种配置\n\n```bash\nonLanguage:${language}\nonCommand:${command}\nonDebug\nworkspaceContains:${toplevelfilename}\nonFileSystem:${scheme}\nonView:${viewId}\nonUri\n*\n```\n\n- contributes\n\n```bash\nconfiguration：设置\ncommands：命令\nmenus：菜单\nkeybindings：快捷键绑定\nlanguages：新语言支持\ndebuggers：调试\nbreakpoints：断点\ngrammars\nthemes：主题\nsnippets：代码片段\njsonValidation：自定义JSON校验\nviews：左侧侧边栏视图\nviewsContainers：自定义activitybar\nproblemMatchers\nproblemPatterns\ntaskDefinitions\ncolors\n```\n\n### viscode插件脚手架\n\n```bash\nnpm install -g yo generator-code\nyo code\n# ? What type of extension do you want to create? New Extension (TypeScript)\n# ? What's the name of your extension? HelloWorld\n### Press <Enter> to choose default for all options below ###\n\n# ? What's the identifier of your extension? helloworld\n# ? What's the description of your extension? LEAVE BLANK\n# ? Initialize a git repository? Yes\n# ? Bundle the source code with webpack? No\n# ? Which package manager to use? npm\n\n# ? Do you want to open the new folder with Visual Studio Code? Open with `code`\n```\n\n生成插件目录如下\n\n```bash\n// tree -I \"node_modules\"\n.\n├── CHANGELOG.md\n├── README.md\n├── out\n│   ├── extension.js\n│   ├── extension.js.map\n│   └── test\n│       ├── runTest.js\n│       ├── runTest.js.map\n│       └── suite\n│           ├── extension.test.js\n│           ├── extension.test.js.map\n│           ├── index.js\n│           └── index.js.map\n├── package-lock.json\n├── package.json\n├── src\n│   ├── extension.ts\n│   └── test\n│       ├── runTest.ts\n│       └── suite\n│           ├── extension.test.ts\n│           └── index.ts\n├── tsconfig.json\n└── vsc-extension-quickstart.md\n```\n\n\n\n","source":"_posts/vscode-plugin-自定义vscode插件1.md","raw":"---\ntitle: 自定义vscode插件\ndate: 2022-01-14 16:24:00\nTags: vscode, typescript, extensions\n---\n\n# VScode组成结构\n\nVSCode 是基于 Electron 构建的，主要由三部分构成：\n\n- Electron: UI\n\n- - Monaco Editor\n  - Extension Host\n\n- Language Server Protocol & Debug Adapter Protocol\n\n# 插件生命周期\n\n从生命周期上来看，插件编写有三大个部分：\n\n- **Activation Event**：设置插件激活的时机。位于 package.json 中。\n- **Contribution Point**：设置在 VSCode 中哪些地方添加新功能，也就是这个插件增强了哪些功能。位于 package.json 中。\n- **Register**：在 `extension.ts` 中给要写的功能用 `vscode.commands.register...` 给 `Activation Event` 或 `Contribution Point` 中配置的事件绑定方法或者设置监听器。位于入口文件（默认是 `extension.ts`）的 `activate()` 函数中。\n\n### packages.json\n\npackage 中和插件有关的主要内容是如下几个项目，其中 main 是插件代码的入口文件。\n\n```json\n\"activationEvents\": [\n        \"onCommand:extension.helloWorld\"\n    ],\n    \"main\": \"./out/extension.js\",\n    \"contributes\": {\n        \"commands\": [\n            {\n                \"command\": \"extension.helloWorld\",\n                \"title\": \"Hello World\"\n            },\n            {\n                \"command\": \"extension.helloVscode\",\n                \"title\": \"Hello vscode\"\n            }\n        ]\n    },\n```\n\n- activationEvents: 配置插件什么时候被激活， 目前支持下面8种配置\n\n```bash\nonLanguage:${language}\nonCommand:${command}\nonDebug\nworkspaceContains:${toplevelfilename}\nonFileSystem:${scheme}\nonView:${viewId}\nonUri\n*\n```\n\n- contributes\n\n```bash\nconfiguration：设置\ncommands：命令\nmenus：菜单\nkeybindings：快捷键绑定\nlanguages：新语言支持\ndebuggers：调试\nbreakpoints：断点\ngrammars\nthemes：主题\nsnippets：代码片段\njsonValidation：自定义JSON校验\nviews：左侧侧边栏视图\nviewsContainers：自定义activitybar\nproblemMatchers\nproblemPatterns\ntaskDefinitions\ncolors\n```\n\n### viscode插件脚手架\n\n```bash\nnpm install -g yo generator-code\nyo code\n# ? What type of extension do you want to create? New Extension (TypeScript)\n# ? What's the name of your extension? HelloWorld\n### Press <Enter> to choose default for all options below ###\n\n# ? What's the identifier of your extension? helloworld\n# ? What's the description of your extension? LEAVE BLANK\n# ? Initialize a git repository? Yes\n# ? Bundle the source code with webpack? No\n# ? Which package manager to use? npm\n\n# ? Do you want to open the new folder with Visual Studio Code? Open with `code`\n```\n\n生成插件目录如下\n\n```bash\n// tree -I \"node_modules\"\n.\n├── CHANGELOG.md\n├── README.md\n├── out\n│   ├── extension.js\n│   ├── extension.js.map\n│   └── test\n│       ├── runTest.js\n│       ├── runTest.js.map\n│       └── suite\n│           ├── extension.test.js\n│           ├── extension.test.js.map\n│           ├── index.js\n│           └── index.js.map\n├── package-lock.json\n├── package.json\n├── src\n│   ├── extension.ts\n│   └── test\n│       ├── runTest.ts\n│       └── suite\n│           ├── extension.test.ts\n│           └── index.ts\n├── tsconfig.json\n└── vsc-extension-quickstart.md\n```\n\n\n\n","slug":"vscode-plugin-自定义vscode插件1","published":1,"updated":"2022-01-17T11:17:29.637Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckys47naw0000c9woat5s9pzd","content":"<h1 id=\"VScode组成结构\"><a href=\"#VScode组成结构\" class=\"headerlink\" title=\"VScode组成结构\"></a>VScode组成结构</h1><p>VSCode 是基于 Electron 构建的，主要由三部分构成：</p>\n<ul>\n<li><p>Electron: UI</p>\n</li>\n<li><ul>\n<li>Monaco Editor</li>\n<li>Extension Host</li>\n</ul>\n</li>\n<li><p>Language Server Protocol &amp; Debug Adapter Protocol</p>\n</li>\n</ul>\n<h1 id=\"插件生命周期\"><a href=\"#插件生命周期\" class=\"headerlink\" title=\"插件生命周期\"></a>插件生命周期</h1><p>从生命周期上来看，插件编写有三大个部分：</p>\n<ul>\n<li><strong>Activation Event</strong>：设置插件激活的时机。位于 package.json 中。</li>\n<li><strong>Contribution Point</strong>：设置在 VSCode 中哪些地方添加新功能，也就是这个插件增强了哪些功能。位于 package.json 中。</li>\n<li><strong>Register</strong>：在 <code>extension.ts</code> 中给要写的功能用 <code>vscode.commands.register...</code> 给 <code>Activation Event</code> 或 <code>Contribution Point</code> 中配置的事件绑定方法或者设置监听器。位于入口文件（默认是 <code>extension.ts</code>）的 <code>activate()</code> 函数中。</li>\n</ul>\n<h3 id=\"packages-json\"><a href=\"#packages-json\" class=\"headerlink\" title=\"packages.json\"></a>packages.json</h3><p>package 中和插件有关的主要内容是如下几个项目，其中 main 是插件代码的入口文件。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;onCommand:extension.helloWorld&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;main&quot;</span>: <span class=\"string\">&quot;./out/extension.js&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.helloWorld&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Hello World&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.helloVscode&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Hello vscode&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>activationEvents: 配置插件什么时候被激活， 目前支持下面8种配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onLanguage:<span class=\"variable\">$&#123;language&#125;</span></span><br><span class=\"line\">onCommand:<span class=\"variable\">$&#123;command&#125;</span></span><br><span class=\"line\">onDebug</span><br><span class=\"line\">workspaceContains:<span class=\"variable\">$&#123;toplevelfilename&#125;</span></span><br><span class=\"line\">onFileSystem:<span class=\"variable\">$&#123;scheme&#125;</span></span><br><span class=\"line\">onView:<span class=\"variable\">$&#123;viewId&#125;</span></span><br><span class=\"line\">onUri</span><br><span class=\"line\">*</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>contributes</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configuration：设置</span><br><span class=\"line\">commands：命令</span><br><span class=\"line\">menus：菜单</span><br><span class=\"line\">keybindings：快捷键绑定</span><br><span class=\"line\">languages：新语言支持</span><br><span class=\"line\">debuggers：调试</span><br><span class=\"line\">breakpoints：断点</span><br><span class=\"line\">grammars</span><br><span class=\"line\">themes：主题</span><br><span class=\"line\">snippets：代码片段</span><br><span class=\"line\">jsonValidation：自定义JSON校验</span><br><span class=\"line\">views：左侧侧边栏视图</span><br><span class=\"line\">viewsContainers：自定义activitybar</span><br><span class=\"line\">problemMatchers</span><br><span class=\"line\">problemPatterns</span><br><span class=\"line\">taskDefinitions</span><br><span class=\"line\">colors</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"viscode插件脚手架\"><a href=\"#viscode插件脚手架\" class=\"headerlink\" title=\"viscode插件脚手架\"></a>viscode插件脚手架</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g yo generator-code</span><br><span class=\"line\">yo code</span><br><span class=\"line\"><span class=\"comment\"># ? What type of extension do you want to create? New Extension (TypeScript)</span></span><br><span class=\"line\"><span class=\"comment\"># ? What&#x27;s the name of your extension? HelloWorld</span></span><br><span class=\"line\"><span class=\"comment\">### Press &lt;Enter&gt; to choose default for all options below ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ? What&#x27;s the identifier of your extension? helloworld</span></span><br><span class=\"line\"><span class=\"comment\"># ? What&#x27;s the description of your extension? LEAVE BLANK</span></span><br><span class=\"line\"><span class=\"comment\"># ? Initialize a git repository? Yes</span></span><br><span class=\"line\"><span class=\"comment\"># ? Bundle the source code with webpack? No</span></span><br><span class=\"line\"><span class=\"comment\"># ? Which package manager to use? npm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ? Do you want to open the new folder with Visual Studio Code? Open with `code`</span></span><br></pre></td></tr></table></figure>\n\n<p>生成插件目录如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// tree -I <span class=\"string\">&quot;node_modules&quot;</span></span><br><span class=\"line\">.</span><br><span class=\"line\">├── CHANGELOG.md</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── out</span><br><span class=\"line\">│   ├── extension.js</span><br><span class=\"line\">│   ├── extension.js.map</span><br><span class=\"line\">│   └── <span class=\"built_in\">test</span></span><br><span class=\"line\">│       ├── runTest.js</span><br><span class=\"line\">│       ├── runTest.js.map</span><br><span class=\"line\">│       └── suite</span><br><span class=\"line\">│           ├── extension.test.js</span><br><span class=\"line\">│           ├── extension.test.js.map</span><br><span class=\"line\">│           ├── index.js</span><br><span class=\"line\">│           └── index.js.map</span><br><span class=\"line\">├── package-lock.json</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   ├── extension.ts</span><br><span class=\"line\">│   └── <span class=\"built_in\">test</span></span><br><span class=\"line\">│       ├── runTest.ts</span><br><span class=\"line\">│       └── suite</span><br><span class=\"line\">│           ├── extension.test.ts</span><br><span class=\"line\">│           └── index.ts</span><br><span class=\"line\">├── tsconfig.json</span><br><span class=\"line\">└── vsc-extension-quickstart.md</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"VScode组成结构\"><a href=\"#VScode组成结构\" class=\"headerlink\" title=\"VScode组成结构\"></a>VScode组成结构</h1><p>VSCode 是基于 Electron 构建的，主要由三部分构成：</p>\n<ul>\n<li><p>Electron: UI</p>\n</li>\n<li><ul>\n<li>Monaco Editor</li>\n<li>Extension Host</li>\n</ul>\n</li>\n<li><p>Language Server Protocol &amp; Debug Adapter Protocol</p>\n</li>\n</ul>\n<h1 id=\"插件生命周期\"><a href=\"#插件生命周期\" class=\"headerlink\" title=\"插件生命周期\"></a>插件生命周期</h1><p>从生命周期上来看，插件编写有三大个部分：</p>\n<ul>\n<li><strong>Activation Event</strong>：设置插件激活的时机。位于 package.json 中。</li>\n<li><strong>Contribution Point</strong>：设置在 VSCode 中哪些地方添加新功能，也就是这个插件增强了哪些功能。位于 package.json 中。</li>\n<li><strong>Register</strong>：在 <code>extension.ts</code> 中给要写的功能用 <code>vscode.commands.register...</code> 给 <code>Activation Event</code> 或 <code>Contribution Point</code> 中配置的事件绑定方法或者设置监听器。位于入口文件（默认是 <code>extension.ts</code>）的 <code>activate()</code> 函数中。</li>\n</ul>\n<h3 id=\"packages-json\"><a href=\"#packages-json\" class=\"headerlink\" title=\"packages.json\"></a>packages.json</h3><p>package 中和插件有关的主要内容是如下几个项目，其中 main 是插件代码的入口文件。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;onCommand:extension.helloWorld&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;main&quot;</span>: <span class=\"string\">&quot;./out/extension.js&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.helloWorld&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Hello World&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.helloVscode&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Hello vscode&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>activationEvents: 配置插件什么时候被激活， 目前支持下面8种配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onLanguage:<span class=\"variable\">$&#123;language&#125;</span></span><br><span class=\"line\">onCommand:<span class=\"variable\">$&#123;command&#125;</span></span><br><span class=\"line\">onDebug</span><br><span class=\"line\">workspaceContains:<span class=\"variable\">$&#123;toplevelfilename&#125;</span></span><br><span class=\"line\">onFileSystem:<span class=\"variable\">$&#123;scheme&#125;</span></span><br><span class=\"line\">onView:<span class=\"variable\">$&#123;viewId&#125;</span></span><br><span class=\"line\">onUri</span><br><span class=\"line\">*</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>contributes</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configuration：设置</span><br><span class=\"line\">commands：命令</span><br><span class=\"line\">menus：菜单</span><br><span class=\"line\">keybindings：快捷键绑定</span><br><span class=\"line\">languages：新语言支持</span><br><span class=\"line\">debuggers：调试</span><br><span class=\"line\">breakpoints：断点</span><br><span class=\"line\">grammars</span><br><span class=\"line\">themes：主题</span><br><span class=\"line\">snippets：代码片段</span><br><span class=\"line\">jsonValidation：自定义JSON校验</span><br><span class=\"line\">views：左侧侧边栏视图</span><br><span class=\"line\">viewsContainers：自定义activitybar</span><br><span class=\"line\">problemMatchers</span><br><span class=\"line\">problemPatterns</span><br><span class=\"line\">taskDefinitions</span><br><span class=\"line\">colors</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"viscode插件脚手架\"><a href=\"#viscode插件脚手架\" class=\"headerlink\" title=\"viscode插件脚手架\"></a>viscode插件脚手架</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g yo generator-code</span><br><span class=\"line\">yo code</span><br><span class=\"line\"><span class=\"comment\"># ? What type of extension do you want to create? New Extension (TypeScript)</span></span><br><span class=\"line\"><span class=\"comment\"># ? What&#x27;s the name of your extension? HelloWorld</span></span><br><span class=\"line\"><span class=\"comment\">### Press &lt;Enter&gt; to choose default for all options below ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ? What&#x27;s the identifier of your extension? helloworld</span></span><br><span class=\"line\"><span class=\"comment\"># ? What&#x27;s the description of your extension? LEAVE BLANK</span></span><br><span class=\"line\"><span class=\"comment\"># ? Initialize a git repository? Yes</span></span><br><span class=\"line\"><span class=\"comment\"># ? Bundle the source code with webpack? No</span></span><br><span class=\"line\"><span class=\"comment\"># ? Which package manager to use? npm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ? Do you want to open the new folder with Visual Studio Code? Open with `code`</span></span><br></pre></td></tr></table></figure>\n\n<p>生成插件目录如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// tree -I <span class=\"string\">&quot;node_modules&quot;</span></span><br><span class=\"line\">.</span><br><span class=\"line\">├── CHANGELOG.md</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── out</span><br><span class=\"line\">│   ├── extension.js</span><br><span class=\"line\">│   ├── extension.js.map</span><br><span class=\"line\">│   └── <span class=\"built_in\">test</span></span><br><span class=\"line\">│       ├── runTest.js</span><br><span class=\"line\">│       ├── runTest.js.map</span><br><span class=\"line\">│       └── suite</span><br><span class=\"line\">│           ├── extension.test.js</span><br><span class=\"line\">│           ├── extension.test.js.map</span><br><span class=\"line\">│           ├── index.js</span><br><span class=\"line\">│           └── index.js.map</span><br><span class=\"line\">├── package-lock.json</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   ├── extension.ts</span><br><span class=\"line\">│   └── <span class=\"built_in\">test</span></span><br><span class=\"line\">│       ├── runTest.ts</span><br><span class=\"line\">│       └── suite</span><br><span class=\"line\">│           ├── extension.test.ts</span><br><span class=\"line\">│           └── index.ts</span><br><span class=\"line\">├── tsconfig.json</span><br><span class=\"line\">└── vsc-extension-quickstart.md</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"vscode插件开发-webview","date":"2022-01-21T06:18:36.000Z","_content":"\n# 1- 创建webview\n\n```tsx\nimport * as vscode from 'vscode';\n\nfunction testWebview(context: vscode.ExtensionContext): void {\n  context.subscriptions.push(\n    vscode.commands.registerCommand('extension.demo.openWebview', (uri) => {\n      console.log('uri', uri);\n      const panel = vscode.window.createWebviewPanel(\n        'testWebview',\n        'Webview test',\n        vscode.ViewColumn.One,\n        {\n          enableScripts: true,\n          retainContextWhenHidden: true,\n        },\n      );\n      panel.webview.html = `<html><body>你好，我是webview</body></html>`;\n    }));\n}\n\nexport default testWebview;\n\n```\n\n声明命令\n\n```json\n\t\"activationEvents\": [\n\t\t\t\t\"onCommand:extension.demo.openWebview\"\n\t],\n\t\t\"contributes\": {\n\t\t\"commands\": [\n\t\t\t{\n\t\t\t\t\"command\": \"extension.demo.openWebview\",\n\t\t\t\t\"title\": \"OPEN WEBVIEW\"\n\t\t\t}\n\t\t],\n\t\t\"menus\": {\n\t\t\t\"editor/context\": [\n\t\t\t\t{\n\t\t\t\t\t\"command\": \"extension.demo.openWebview\",\n\t\t\t\t\t\"group\": \"navigation\"\n\t\t\t}\n\t\t\t],\n\t\t}\n\t},\n```\n\n# 2- 加载本地资源\n\n出于安全考虑，Webview默认无法直接访问本地资源，它在一个孤立的上下文中运行，想要加载本地图片、js、css等必须通过特殊的`vscode-resource:`协议，网页里面**所有的静态资源都要转换成这种格式，否则无法被正常加载**。\n\n`vscode-resource:`协议类似于`file:`协议，但它只允许访问特定的本地文件。和`file:`一样，`vscode-resource:`从磁盘加载绝对路径的资源。\n\n转换本地磁盘文件路径成webview 能打开的文件路径\n\n```js\ngetExtensionFileVscodeResource: function(context, relativePath) {\n\tconst diskPath = vscode.Uri.file(path.join(context.extensionPath, relativePath));\n\treturn diskPath.with({ scheme: 'vscode-resource' }).toString();\n}\n```\n\n默认情况下，`vscode-resource:`只能访问以下位置中的资源：\n\n ```\n - 扩展程序安装目录中的文件。\n - 用户当前活动的工作区内。\n - 当然，你还可以使用dataURI直接在Webview中嵌入资源，这种方式没有限制；\n ```\n\n# 3- 从文件加载HTML内容\n\n默认不支持从文件加载HTML，需要自己封装代码\n\n```js\n  getWebviewContent(\n    context: vscode.ExtensionContext,\n    templatePath: string,\n  ): string {\n    const resourcePath = path.join(context.extensionPath, templatePath);\n    const dirPath = path.dirname(resourcePath);\n    let html = fs.readFileSync(resourcePath, 'utf-8');\n    // 处理html内部的资源路径成可以被vscode webview 访问的路径\n    html = html.replace(\n      /(<link.+?href=\"|<script.+?src=\"|<img.+?src=\")(.+?)\"/g,\n      (m, $1, $2) => {\n        return $1 + vscode.Uri.file(path.resolve(dirPath, $2)).with(\n          { scheme: 'vscode-resource' }).toString();\n      });\n    return html;\n  },\n```\n\n# 4- 消息通信\n\n重头戏来了，`Webview`和普通网页非常类似，不能直接调用任何`VSCode`API，但是，它唯一特别之处就在于多了一个名叫`acquireVsCodeApi`的方法，执行这个方法会返回一个超级阉割版的`vscode`对象，这个对象里面有且仅有如下3个可以和插件通信的API：\n\n```\n- getState\n- postMessage\n- setState\n```\n\n插件给`Webview`发送消息: 支持发送任意可以被`JSON`化的数据\n\n```tsx\npanel.webview.postMessage({text: \"hello\"})\n```\n\nwebview 端接收\n\n```tsx\nwindow.addEventListener('message', event => {\n\tconst message = event.data;\n\tconsole.log('Webview接收到的消息：', message);\n}\n```\n\n`Webview`主动发送消息给插件：\n\n```tex\nvscode.postMessage({text: '你好，我是Webview啊！'});\n```\n\n插件接收：\n\n```tsx\npanel.webview.onDidReceiveMessage(message => {\n\tconsole.log('插件收到的消息：', message);\n}, undefined, context.subscriptions);\n```\n\n# 5- 封装通信\n\n\n\n# 6- 主题适配\n\n`Webview`可以根据`VS Code`的当前主题更改其外观，原理是body上面添加当前主题名称，主要有以下三种：\n\n ```json\n vscode-light - 浅色主题；\n vscode-dark -深色主题；\n vscode-high-contrast - 高对比度主题;\n ```\n\n可以通过自己写样式来适配不同主题：\n\n```css\n/* 浅色主题 */\n.body.vscode-light {\n\tbackground: white;\n\tcolor: black;\n}\n/* 深色主题 */\nbody.vscode-dark {\n\tbackground: #252526;\n\tcolor: white;\n}\n/* 高对比度主题 */\nbody.vscode-high-contrast {\n\tbackground: white;\n\tcolor: red;\n}\n```\n\n# 7- 生命周期\n\n`webview`由创建它的扩展程序所有，返回的`panel`对象你必须自己保存，如果你的扩展程序丢失了这个引用，那么将无法再次重新访问该`webview`，即使Web视图继续显示在`vscode`中。\n\n用户也可以随时关闭`webview`面板。当用户关闭webview面板时，webview本身将被销毁，此时不能再使用panel引用，否则将会出现异常，可以通过监听`onDidDispose`事件在这里面做一些销毁操作。\n\n可以通过`panel.dispose()`方法主动关闭webview。\n\n# 8- 状态保持\n\n当webview移动到后台又再次显示时，webview中的任何状态都将丢失。\n\n解决此问题的最佳方法是使你的webview无状态，通过消息传递来保存webview的状态。\n\n## 8.1- state\n\n在webview的js中我们可以使用`vscode.getState()`和`vscode.setState()`方法来保存和恢复JSON可序列化状态对象。当webview被隐藏时，即使webview内容本身被破坏，这些状态仍然会保存。当然了，当webview被销毁时，状态将被销毁。\n\n## 8.2 序列化\n\n通过注册`WebviewPanelSerializer`可以实现在`VScode`重启后自动恢复你的`webview`，当然，序列化其实也是建立在`getState`和`setState`之上的。\n\n注册方法：`vscode.window.registerWebviewPanelSerializer`\n\n## 8.3- retainContextWhenHidden\n\n对于具有非常复杂的UI或状态且无法快速保存和恢复的`webview`，我们可以直接使用`retainContextWhenHidden`选项。设置`retainContextWhenHidden: true`后即使webview被隐藏到后台其状态也不会丢失。\n\n尽管`retainContextWhenHidden`很有吸引力，但它需要很高的内存开销，一般建议在实在没办法的时候才启用。\n`getState`和`setState`是持久化的首选方式，因为它们的性能开销要比`retainContextWhenHidden`低得多。\n\n# 9- API\n\n| Guide on VS Code Website                                     | API & Contribution                                           |\n| :----------------------------------------------------------- | :----------------------------------------------------------- |\n| [Command](https://code.visualstudio.com/api/extension-guides/command) | [commands](https://code.visualstudio.com/api/references/vscode-api#commands) |\n| [Color Theme](https://code.visualstudio.com/api/extension-guides/color-theme) | [contributes.themes](https://code.visualstudio.com/api/references/contribution-points#contributes.themes) |\n| [File Icon Theme](https://code.visualstudio.com/api/extension-guides/file-icon-theme) | [contributes.iconThemes](https://code.visualstudio.com/api/references/contribution-points#contributes.iconThemes) |\n| [Product Icon Theme](https://code.visualstudio.com/api/extension-guides/product-icon-theme) | [contributes.productIconThemes](https://code.visualstudio.com/api/references/contribution-points#contributes.productIconThemes) |\n| [Tree View](https://code.visualstudio.com/api/extension-guides/tree-view) | [window.createTreeView](https://code.visualstudio.com/api/references/vscode-api#window.createTreeView) [window.registerTreeDataProvider](https://code.visualstudio.com/api/references/vscode-api#window.registerTreeDataProvider) [TreeView](https://code.visualstudio.com/api/references/vscode-api#TreeView) [TreeDataProvider](https://code.visualstudio.com/api/references/vscode-api#TreeDataProvider) [contributes.views](https://code.visualstudio.com/api/references/contribution-points#contributes.views) [contributes.viewsContainers](https://code.visualstudio.com/api/references/contribution-points#contributes.viewsContainers) |\n| [Webview](https://code.visualstudio.com/api/extension-guides/webview) | [window.createWebviewPanel](https://code.visualstudio.com/api/references/vscode-api#window.createWebviewPanel) [window.registerWebviewPanelSerializer](https://code.visualstudio.com/api/references/vscode-api#window.registerWebviewPanelSerializer) |\n| [Custom Editors](https://code.visualstudio.com/api/extension-guides/custom-editors) | [window.registerCustomEditorProvider](https://code.visualstudio.com/api/references/vscode-api#window.registerCustomEditorProvider) [CustomTextEditorProvider](https://code.visualstudio.com/api/references/vscode-api#CustomTextEditorProvider) [contributes.customEditors](https://code.visualstudio.com/api/references/contribution-points#contributes.customEditors) |\n| [Virtual Documents](https://code.visualstudio.com/api/extension-guides/virtual-documents) | [workspace.registerTextDocumentContentProvider](https://code.visualstudio.com/api/references/vscode-api#workspace.registerTextDocumentContentProvider) [commands.registerCommand](https://code.visualstudio.com/api/references/vscode-api#commands.registerCommand) [window.showInputBox](https://code.visualstudio.com/api/references/vscode-api#window.showInputBox) |\n| [Virtual Workspaces](https://code.visualstudio.com/api/extension-guides/virtual-workspaces) | [workspace.fs](https://code.visualstudio.com/api/references/vscode-api#workspace.fs) capabilities.virtualWorkspaces |\n| [Workspace Trust](https://code.visualstudio.com/api/extension-guides/workspace-trust) | [workspace.isTrusted](https://code.visualstudio.com/api/references/vscode-api#workspace.isTrusted) [workspace.onDidGrantWorkspaceTrust](https://code.visualstudio.com/api/references/vscode-api#workspace.onDidGrantWorkspaceTrust) capabilities.untrustedWorkspaces |\n| [Task Provider](https://code.visualstudio.com/api/extension-guides/task-provider) | [tasks.registerTaskProvider](https://code.visualstudio.com/api/references/vscode-api#tasks.registerTaskProvider) [Task](https://code.visualstudio.com/api/references/vscode-api#Task) [ShellExecution](https://code.visualstudio.com/api/references/vscode-api#ShellExecution) [contributes.taskDefinitions](https://code.visualstudio.com/api/references/contribution-points#contributes.taskDefinitions) |\n| [Source Control](https://code.visualstudio.com/api/extension-guides/scm-provider) | [workspace.workspaceFolders](https://code.visualstudio.com/api/references/vscode-api#workspace.workspaceFolders) [SourceControl](https://code.visualstudio.com/api/references/vscode-api#SourceControl) [SourceControlResourceGroup](https://code.visualstudio.com/api/references/vscode-api#SourceControlResourceGroup) [scm.createSourceControl](https://code.visualstudio.com/api/references/vscode-api#scm.createSourceControl) [TextDocumentContentProvider](https://code.visualstudio.com/api/references/vscode-api#TextDocumentContentProvider) [contributes.menus](https://code.visualstudio.com/api/references/contribution-points#contributes.menus) |\n| [Debugger Extension](https://code.visualstudio.com/api/extension-guides/debugger-extension) | [contributes.breakpoints](https://code.visualstudio.com/api/references/contribution-points#contributes.breakpoints) [contributes.debuggers](https://code.visualstudio.com/api/references/contribution-points#contributes.debuggers) [debug](https://code.visualstudio.com/api/references/vscode-api#debug) |\n| [Markdown Extension](https://code.visualstudio.com/api/extension-guides/markdown-extension) | markdown.previewStyles markdown.markdownItPlugins markdown.previewScripts |\n| [Test Extension](https://code.visualstudio.com/api/extension-guides/testing) | [TestController](https://code.visualstudio.com/api/references/vscode-api#TestController) [TestItem](https://code.visualstudio.com/api/references/vscode-api#TestItem) |\n| [Custom Data Extension](https://code.visualstudio.com/api/extension-guides/custom-data-extension) | contributes.html.customData contributes.css.customData       |\n\n","source":"_posts/vscode插件开发-webview.md","raw":"---\ntitle: vscode插件开发-webview\ndate: 2022-01-21 14:18:36\ntags: vscode, extensions, webview\n---\n\n# 1- 创建webview\n\n```tsx\nimport * as vscode from 'vscode';\n\nfunction testWebview(context: vscode.ExtensionContext): void {\n  context.subscriptions.push(\n    vscode.commands.registerCommand('extension.demo.openWebview', (uri) => {\n      console.log('uri', uri);\n      const panel = vscode.window.createWebviewPanel(\n        'testWebview',\n        'Webview test',\n        vscode.ViewColumn.One,\n        {\n          enableScripts: true,\n          retainContextWhenHidden: true,\n        },\n      );\n      panel.webview.html = `<html><body>你好，我是webview</body></html>`;\n    }));\n}\n\nexport default testWebview;\n\n```\n\n声明命令\n\n```json\n\t\"activationEvents\": [\n\t\t\t\t\"onCommand:extension.demo.openWebview\"\n\t],\n\t\t\"contributes\": {\n\t\t\"commands\": [\n\t\t\t{\n\t\t\t\t\"command\": \"extension.demo.openWebview\",\n\t\t\t\t\"title\": \"OPEN WEBVIEW\"\n\t\t\t}\n\t\t],\n\t\t\"menus\": {\n\t\t\t\"editor/context\": [\n\t\t\t\t{\n\t\t\t\t\t\"command\": \"extension.demo.openWebview\",\n\t\t\t\t\t\"group\": \"navigation\"\n\t\t\t}\n\t\t\t],\n\t\t}\n\t},\n```\n\n# 2- 加载本地资源\n\n出于安全考虑，Webview默认无法直接访问本地资源，它在一个孤立的上下文中运行，想要加载本地图片、js、css等必须通过特殊的`vscode-resource:`协议，网页里面**所有的静态资源都要转换成这种格式，否则无法被正常加载**。\n\n`vscode-resource:`协议类似于`file:`协议，但它只允许访问特定的本地文件。和`file:`一样，`vscode-resource:`从磁盘加载绝对路径的资源。\n\n转换本地磁盘文件路径成webview 能打开的文件路径\n\n```js\ngetExtensionFileVscodeResource: function(context, relativePath) {\n\tconst diskPath = vscode.Uri.file(path.join(context.extensionPath, relativePath));\n\treturn diskPath.with({ scheme: 'vscode-resource' }).toString();\n}\n```\n\n默认情况下，`vscode-resource:`只能访问以下位置中的资源：\n\n ```\n - 扩展程序安装目录中的文件。\n - 用户当前活动的工作区内。\n - 当然，你还可以使用dataURI直接在Webview中嵌入资源，这种方式没有限制；\n ```\n\n# 3- 从文件加载HTML内容\n\n默认不支持从文件加载HTML，需要自己封装代码\n\n```js\n  getWebviewContent(\n    context: vscode.ExtensionContext,\n    templatePath: string,\n  ): string {\n    const resourcePath = path.join(context.extensionPath, templatePath);\n    const dirPath = path.dirname(resourcePath);\n    let html = fs.readFileSync(resourcePath, 'utf-8');\n    // 处理html内部的资源路径成可以被vscode webview 访问的路径\n    html = html.replace(\n      /(<link.+?href=\"|<script.+?src=\"|<img.+?src=\")(.+?)\"/g,\n      (m, $1, $2) => {\n        return $1 + vscode.Uri.file(path.resolve(dirPath, $2)).with(\n          { scheme: 'vscode-resource' }).toString();\n      });\n    return html;\n  },\n```\n\n# 4- 消息通信\n\n重头戏来了，`Webview`和普通网页非常类似，不能直接调用任何`VSCode`API，但是，它唯一特别之处就在于多了一个名叫`acquireVsCodeApi`的方法，执行这个方法会返回一个超级阉割版的`vscode`对象，这个对象里面有且仅有如下3个可以和插件通信的API：\n\n```\n- getState\n- postMessage\n- setState\n```\n\n插件给`Webview`发送消息: 支持发送任意可以被`JSON`化的数据\n\n```tsx\npanel.webview.postMessage({text: \"hello\"})\n```\n\nwebview 端接收\n\n```tsx\nwindow.addEventListener('message', event => {\n\tconst message = event.data;\n\tconsole.log('Webview接收到的消息：', message);\n}\n```\n\n`Webview`主动发送消息给插件：\n\n```tex\nvscode.postMessage({text: '你好，我是Webview啊！'});\n```\n\n插件接收：\n\n```tsx\npanel.webview.onDidReceiveMessage(message => {\n\tconsole.log('插件收到的消息：', message);\n}, undefined, context.subscriptions);\n```\n\n# 5- 封装通信\n\n\n\n# 6- 主题适配\n\n`Webview`可以根据`VS Code`的当前主题更改其外观，原理是body上面添加当前主题名称，主要有以下三种：\n\n ```json\n vscode-light - 浅色主题；\n vscode-dark -深色主题；\n vscode-high-contrast - 高对比度主题;\n ```\n\n可以通过自己写样式来适配不同主题：\n\n```css\n/* 浅色主题 */\n.body.vscode-light {\n\tbackground: white;\n\tcolor: black;\n}\n/* 深色主题 */\nbody.vscode-dark {\n\tbackground: #252526;\n\tcolor: white;\n}\n/* 高对比度主题 */\nbody.vscode-high-contrast {\n\tbackground: white;\n\tcolor: red;\n}\n```\n\n# 7- 生命周期\n\n`webview`由创建它的扩展程序所有，返回的`panel`对象你必须自己保存，如果你的扩展程序丢失了这个引用，那么将无法再次重新访问该`webview`，即使Web视图继续显示在`vscode`中。\n\n用户也可以随时关闭`webview`面板。当用户关闭webview面板时，webview本身将被销毁，此时不能再使用panel引用，否则将会出现异常，可以通过监听`onDidDispose`事件在这里面做一些销毁操作。\n\n可以通过`panel.dispose()`方法主动关闭webview。\n\n# 8- 状态保持\n\n当webview移动到后台又再次显示时，webview中的任何状态都将丢失。\n\n解决此问题的最佳方法是使你的webview无状态，通过消息传递来保存webview的状态。\n\n## 8.1- state\n\n在webview的js中我们可以使用`vscode.getState()`和`vscode.setState()`方法来保存和恢复JSON可序列化状态对象。当webview被隐藏时，即使webview内容本身被破坏，这些状态仍然会保存。当然了，当webview被销毁时，状态将被销毁。\n\n## 8.2 序列化\n\n通过注册`WebviewPanelSerializer`可以实现在`VScode`重启后自动恢复你的`webview`，当然，序列化其实也是建立在`getState`和`setState`之上的。\n\n注册方法：`vscode.window.registerWebviewPanelSerializer`\n\n## 8.3- retainContextWhenHidden\n\n对于具有非常复杂的UI或状态且无法快速保存和恢复的`webview`，我们可以直接使用`retainContextWhenHidden`选项。设置`retainContextWhenHidden: true`后即使webview被隐藏到后台其状态也不会丢失。\n\n尽管`retainContextWhenHidden`很有吸引力，但它需要很高的内存开销，一般建议在实在没办法的时候才启用。\n`getState`和`setState`是持久化的首选方式，因为它们的性能开销要比`retainContextWhenHidden`低得多。\n\n# 9- API\n\n| Guide on VS Code Website                                     | API & Contribution                                           |\n| :----------------------------------------------------------- | :----------------------------------------------------------- |\n| [Command](https://code.visualstudio.com/api/extension-guides/command) | [commands](https://code.visualstudio.com/api/references/vscode-api#commands) |\n| [Color Theme](https://code.visualstudio.com/api/extension-guides/color-theme) | [contributes.themes](https://code.visualstudio.com/api/references/contribution-points#contributes.themes) |\n| [File Icon Theme](https://code.visualstudio.com/api/extension-guides/file-icon-theme) | [contributes.iconThemes](https://code.visualstudio.com/api/references/contribution-points#contributes.iconThemes) |\n| [Product Icon Theme](https://code.visualstudio.com/api/extension-guides/product-icon-theme) | [contributes.productIconThemes](https://code.visualstudio.com/api/references/contribution-points#contributes.productIconThemes) |\n| [Tree View](https://code.visualstudio.com/api/extension-guides/tree-view) | [window.createTreeView](https://code.visualstudio.com/api/references/vscode-api#window.createTreeView) [window.registerTreeDataProvider](https://code.visualstudio.com/api/references/vscode-api#window.registerTreeDataProvider) [TreeView](https://code.visualstudio.com/api/references/vscode-api#TreeView) [TreeDataProvider](https://code.visualstudio.com/api/references/vscode-api#TreeDataProvider) [contributes.views](https://code.visualstudio.com/api/references/contribution-points#contributes.views) [contributes.viewsContainers](https://code.visualstudio.com/api/references/contribution-points#contributes.viewsContainers) |\n| [Webview](https://code.visualstudio.com/api/extension-guides/webview) | [window.createWebviewPanel](https://code.visualstudio.com/api/references/vscode-api#window.createWebviewPanel) [window.registerWebviewPanelSerializer](https://code.visualstudio.com/api/references/vscode-api#window.registerWebviewPanelSerializer) |\n| [Custom Editors](https://code.visualstudio.com/api/extension-guides/custom-editors) | [window.registerCustomEditorProvider](https://code.visualstudio.com/api/references/vscode-api#window.registerCustomEditorProvider) [CustomTextEditorProvider](https://code.visualstudio.com/api/references/vscode-api#CustomTextEditorProvider) [contributes.customEditors](https://code.visualstudio.com/api/references/contribution-points#contributes.customEditors) |\n| [Virtual Documents](https://code.visualstudio.com/api/extension-guides/virtual-documents) | [workspace.registerTextDocumentContentProvider](https://code.visualstudio.com/api/references/vscode-api#workspace.registerTextDocumentContentProvider) [commands.registerCommand](https://code.visualstudio.com/api/references/vscode-api#commands.registerCommand) [window.showInputBox](https://code.visualstudio.com/api/references/vscode-api#window.showInputBox) |\n| [Virtual Workspaces](https://code.visualstudio.com/api/extension-guides/virtual-workspaces) | [workspace.fs](https://code.visualstudio.com/api/references/vscode-api#workspace.fs) capabilities.virtualWorkspaces |\n| [Workspace Trust](https://code.visualstudio.com/api/extension-guides/workspace-trust) | [workspace.isTrusted](https://code.visualstudio.com/api/references/vscode-api#workspace.isTrusted) [workspace.onDidGrantWorkspaceTrust](https://code.visualstudio.com/api/references/vscode-api#workspace.onDidGrantWorkspaceTrust) capabilities.untrustedWorkspaces |\n| [Task Provider](https://code.visualstudio.com/api/extension-guides/task-provider) | [tasks.registerTaskProvider](https://code.visualstudio.com/api/references/vscode-api#tasks.registerTaskProvider) [Task](https://code.visualstudio.com/api/references/vscode-api#Task) [ShellExecution](https://code.visualstudio.com/api/references/vscode-api#ShellExecution) [contributes.taskDefinitions](https://code.visualstudio.com/api/references/contribution-points#contributes.taskDefinitions) |\n| [Source Control](https://code.visualstudio.com/api/extension-guides/scm-provider) | [workspace.workspaceFolders](https://code.visualstudio.com/api/references/vscode-api#workspace.workspaceFolders) [SourceControl](https://code.visualstudio.com/api/references/vscode-api#SourceControl) [SourceControlResourceGroup](https://code.visualstudio.com/api/references/vscode-api#SourceControlResourceGroup) [scm.createSourceControl](https://code.visualstudio.com/api/references/vscode-api#scm.createSourceControl) [TextDocumentContentProvider](https://code.visualstudio.com/api/references/vscode-api#TextDocumentContentProvider) [contributes.menus](https://code.visualstudio.com/api/references/contribution-points#contributes.menus) |\n| [Debugger Extension](https://code.visualstudio.com/api/extension-guides/debugger-extension) | [contributes.breakpoints](https://code.visualstudio.com/api/references/contribution-points#contributes.breakpoints) [contributes.debuggers](https://code.visualstudio.com/api/references/contribution-points#contributes.debuggers) [debug](https://code.visualstudio.com/api/references/vscode-api#debug) |\n| [Markdown Extension](https://code.visualstudio.com/api/extension-guides/markdown-extension) | markdown.previewStyles markdown.markdownItPlugins markdown.previewScripts |\n| [Test Extension](https://code.visualstudio.com/api/extension-guides/testing) | [TestController](https://code.visualstudio.com/api/references/vscode-api#TestController) [TestItem](https://code.visualstudio.com/api/references/vscode-api#TestItem) |\n| [Custom Data Extension](https://code.visualstudio.com/api/extension-guides/custom-data-extension) | contributes.html.customData contributes.css.customData       |\n\n","slug":"vscode插件开发-webview","published":1,"updated":"2022-01-24T03:12:11.797Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckys47naz0001c9wo23sp2k25","content":"<h1 id=\"1-创建webview\"><a href=\"#1-创建webview\" class=\"headerlink\" title=\"1- 创建webview\"></a>1- 创建webview</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import * as vscode from &#x27;vscode&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">function testWebview(context: vscode.ExtensionContext): void &#123;</span><br><span class=\"line\">  context.subscriptions.push(</span><br><span class=\"line\">    vscode.commands.registerCommand(&#x27;extension.demo.openWebview&#x27;, (uri) =&gt; &#123;</span><br><span class=\"line\">      console.log(&#x27;uri&#x27;, uri);</span><br><span class=\"line\">      const panel = vscode.window.createWebviewPanel(</span><br><span class=\"line\">        &#x27;testWebview&#x27;,</span><br><span class=\"line\">        &#x27;Webview test&#x27;,</span><br><span class=\"line\">        vscode.ViewColumn.One,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          enableScripts: true,</span><br><span class=\"line\">          retainContextWhenHidden: true,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      );</span><br><span class=\"line\">      panel.webview.html = `&lt;html&gt;&lt;body&gt;你好，我是webview&lt;/body&gt;&lt;/html&gt;`;</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default testWebview;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>声明命令</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;onCommand:extension.demo.openWebview&quot;</span></span><br><span class=\"line\">],</span><br><span class=\"line\">\t<span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.openWebview&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;OPEN WEBVIEW&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"attr\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;editor/context&quot;</span>: [</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.openWebview&quot;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t],</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-加载本地资源\"><a href=\"#2-加载本地资源\" class=\"headerlink\" title=\"2- 加载本地资源\"></a>2- 加载本地资源</h1><p>出于安全考虑，Webview默认无法直接访问本地资源，它在一个孤立的上下文中运行，想要加载本地图片、js、css等必须通过特殊的<code>vscode-resource:</code>协议，网页里面<strong>所有的静态资源都要转换成这种格式，否则无法被正常加载</strong>。</p>\n<p><code>vscode-resource:</code>协议类似于<code>file:</code>协议，但它只允许访问特定的本地文件。和<code>file:</code>一样，<code>vscode-resource:</code>从磁盘加载绝对路径的资源。</p>\n<p>转换本地磁盘文件路径成webview 能打开的文件路径</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getExtensionFileVscodeResource: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context, relativePath</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> diskPath = vscode.Uri.file(path.join(context.extensionPath, relativePath));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> diskPath.with(&#123; <span class=\"attr\">scheme</span>: <span class=\"string\">&#x27;vscode-resource&#x27;</span> &#125;).toString();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>默认情况下，<code>vscode-resource:</code>只能访问以下位置中的资源：</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 扩展程序安装目录中的文件。</span><br><span class=\"line\">- 用户当前活动的工作区内。</span><br><span class=\"line\">- 当然，你还可以使用dataURI直接在Webview中嵌入资源，这种方式没有限制；</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-从文件加载HTML内容\"><a href=\"#3-从文件加载HTML内容\" class=\"headerlink\" title=\"3- 从文件加载HTML内容\"></a>3- 从文件加载HTML内容</h1><p>默认不支持从文件加载HTML，需要自己封装代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getWebviewContent(</span><br><span class=\"line\">  context: vscode.ExtensionContext,</span><br><span class=\"line\">  <span class=\"attr\">templatePath</span>: string,</span><br><span class=\"line\">): string &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> resourcePath = path.join(context.extensionPath, templatePath);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dirPath = path.dirname(resourcePath);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> html = fs.readFileSync(resourcePath, <span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 处理html内部的资源路径成可以被vscode webview 访问的路径</span></span><br><span class=\"line\">  html = html.replace(</span><br><span class=\"line\">    <span class=\"regexp\">/(&lt;link.+?href=&quot;|&lt;script.+?src=&quot;|&lt;img.+?src=&quot;)(.+?)&quot;/g</span>,</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">m, $<span class=\"number\">1</span>, $<span class=\"number\">2</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> $<span class=\"number\">1</span> + vscode.Uri.file(path.resolve(dirPath, $<span class=\"number\">2</span>)).with(</span><br><span class=\"line\">        &#123; <span class=\"attr\">scheme</span>: <span class=\"string\">&#x27;vscode-resource&#x27;</span> &#125;).toString();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> html;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-消息通信\"><a href=\"#4-消息通信\" class=\"headerlink\" title=\"4- 消息通信\"></a>4- 消息通信</h1><p>重头戏来了，<code>Webview</code>和普通网页非常类似，不能直接调用任何<code>VSCode</code>API，但是，它唯一特别之处就在于多了一个名叫<code>acquireVsCodeApi</code>的方法，执行这个方法会返回一个超级阉割版的<code>vscode</code>对象，这个对象里面有且仅有如下3个可以和插件通信的API：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- getState</span><br><span class=\"line\">- postMessage</span><br><span class=\"line\">- setState</span><br></pre></td></tr></table></figure>\n\n<p>插件给<code>Webview</code>发送消息: 支持发送任意可以被<code>JSON</code>化的数据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panel.webview.postMessage(&#123;text: &quot;hello&quot;&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>webview 端接收</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.addEventListener(&#x27;message&#x27;, event =&gt; &#123;</span><br><span class=\"line\">\tconst message = event.data;</span><br><span class=\"line\">\tconsole.log(&#x27;Webview接收到的消息：&#x27;, message);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>Webview</code>主动发送消息给插件：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.postMessage(&#123;text: &#x27;你好，我是Webview啊！&#x27;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>插件接收：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panel.webview.onDidReceiveMessage(message =&gt; &#123;</span><br><span class=\"line\">\tconsole.log(&#x27;插件收到的消息：&#x27;, message);</span><br><span class=\"line\">&#125;, undefined, context.subscriptions);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-封装通信\"><a href=\"#5-封装通信\" class=\"headerlink\" title=\"5- 封装通信\"></a>5- 封装通信</h1><h1 id=\"6-主题适配\"><a href=\"#6-主题适配\" class=\"headerlink\" title=\"6- 主题适配\"></a>6- 主题适配</h1><p><code>Webview</code>可以根据<code>VS Code</code>的当前主题更改其外观，原理是body上面添加当前主题名称，主要有以下三种：</p>\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode-light - 浅色主题；</span><br><span class=\"line\">vscode-dark -深色主题；</span><br><span class=\"line\">vscode-high-contrast - 高对比度主题;</span><br></pre></td></tr></table></figure>\n\n<p>可以通过自己写样式来适配不同主题：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 浅色主题 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.body</span><span class=\"selector-class\">.vscode-light</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 深色主题 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span><span class=\"selector-class\">.vscode-dark</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#252526</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 高对比度主题 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span><span class=\"selector-class\">.vscode-high-contrast</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"7-生命周期\"><a href=\"#7-生命周期\" class=\"headerlink\" title=\"7- 生命周期\"></a>7- 生命周期</h1><p><code>webview</code>由创建它的扩展程序所有，返回的<code>panel</code>对象你必须自己保存，如果你的扩展程序丢失了这个引用，那么将无法再次重新访问该<code>webview</code>，即使Web视图继续显示在<code>vscode</code>中。</p>\n<p>用户也可以随时关闭<code>webview</code>面板。当用户关闭webview面板时，webview本身将被销毁，此时不能再使用panel引用，否则将会出现异常，可以通过监听<code>onDidDispose</code>事件在这里面做一些销毁操作。</p>\n<p>可以通过<code>panel.dispose()</code>方法主动关闭webview。</p>\n<h1 id=\"8-状态保持\"><a href=\"#8-状态保持\" class=\"headerlink\" title=\"8- 状态保持\"></a>8- 状态保持</h1><p>当webview移动到后台又再次显示时，webview中的任何状态都将丢失。</p>\n<p>解决此问题的最佳方法是使你的webview无状态，通过消息传递来保存webview的状态。</p>\n<h2 id=\"8-1-state\"><a href=\"#8-1-state\" class=\"headerlink\" title=\"8.1- state\"></a>8.1- state</h2><p>在webview的js中我们可以使用<code>vscode.getState()</code>和<code>vscode.setState()</code>方法来保存和恢复JSON可序列化状态对象。当webview被隐藏时，即使webview内容本身被破坏，这些状态仍然会保存。当然了，当webview被销毁时，状态将被销毁。</p>\n<h2 id=\"8-2-序列化\"><a href=\"#8-2-序列化\" class=\"headerlink\" title=\"8.2 序列化\"></a>8.2 序列化</h2><p>通过注册<code>WebviewPanelSerializer</code>可以实现在<code>VScode</code>重启后自动恢复你的<code>webview</code>，当然，序列化其实也是建立在<code>getState</code>和<code>setState</code>之上的。</p>\n<p>注册方法：<code>vscode.window.registerWebviewPanelSerializer</code></p>\n<h2 id=\"8-3-retainContextWhenHidden\"><a href=\"#8-3-retainContextWhenHidden\" class=\"headerlink\" title=\"8.3- retainContextWhenHidden\"></a>8.3- retainContextWhenHidden</h2><p>对于具有非常复杂的UI或状态且无法快速保存和恢复的<code>webview</code>，我们可以直接使用<code>retainContextWhenHidden</code>选项。设置<code>retainContextWhenHidden: true</code>后即使webview被隐藏到后台其状态也不会丢失。</p>\n<p>尽管<code>retainContextWhenHidden</code>很有吸引力，但它需要很高的内存开销，一般建议在实在没办法的时候才启用。<br><code>getState</code>和<code>setState</code>是持久化的首选方式，因为它们的性能开销要比<code>retainContextWhenHidden</code>低得多。</p>\n<h1 id=\"9-API\"><a href=\"#9-API\" class=\"headerlink\" title=\"9- API\"></a>9- API</h1><table>\n<thead>\n<tr>\n<th align=\"left\">Guide on VS Code Website</th>\n<th align=\"left\">API &amp; Contribution</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/command\">Command</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#commands\">commands</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/color-theme\">Color Theme</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.themes\">contributes.themes</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/file-icon-theme\">File Icon Theme</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.iconThemes\">contributes.iconThemes</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/product-icon-theme\">Product Icon Theme</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.productIconThemes\">contributes.productIconThemes</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/tree-view\">Tree View</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#window.createTreeView\">window.createTreeView</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#window.registerTreeDataProvider\">window.registerTreeDataProvider</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#TreeView\">TreeView</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#TreeDataProvider\">TreeDataProvider</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.views\">contributes.views</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.viewsContainers\">contributes.viewsContainers</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/webview\">Webview</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#window.createWebviewPanel\">window.createWebviewPanel</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#window.registerWebviewPanelSerializer\">window.registerWebviewPanelSerializer</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/custom-editors\">Custom Editors</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#window.registerCustomEditorProvider\">window.registerCustomEditorProvider</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#CustomTextEditorProvider\">CustomTextEditorProvider</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.customEditors\">contributes.customEditors</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/virtual-documents\">Virtual Documents</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.registerTextDocumentContentProvider\">workspace.registerTextDocumentContentProvider</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#commands.registerCommand\">commands.registerCommand</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#window.showInputBox\">window.showInputBox</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/virtual-workspaces\">Virtual Workspaces</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.fs\">workspace.fs</a> capabilities.virtualWorkspaces</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/workspace-trust\">Workspace Trust</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.isTrusted\">workspace.isTrusted</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.onDidGrantWorkspaceTrust\">workspace.onDidGrantWorkspaceTrust</a> capabilities.untrustedWorkspaces</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/task-provider\">Task Provider</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#tasks.registerTaskProvider\">tasks.registerTaskProvider</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#Task\">Task</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#ShellExecution\">ShellExecution</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.taskDefinitions\">contributes.taskDefinitions</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/scm-provider\">Source Control</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.workspaceFolders\">workspace.workspaceFolders</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#SourceControl\">SourceControl</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#SourceControlResourceGroup\">SourceControlResourceGroup</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#scm.createSourceControl\">scm.createSourceControl</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#TextDocumentContentProvider\">TextDocumentContentProvider</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.menus\">contributes.menus</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/debugger-extension\">Debugger Extension</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.breakpoints\">contributes.breakpoints</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.debuggers\">contributes.debuggers</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#debug\">debug</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/markdown-extension\">Markdown Extension</a></td>\n<td align=\"left\">markdown.previewStyles markdown.markdownItPlugins markdown.previewScripts</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/testing\">Test Extension</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#TestController\">TestController</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#TestItem\">TestItem</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/custom-data-extension\">Custom Data Extension</a></td>\n<td align=\"left\">contributes.html.customData contributes.css.customData</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-创建webview\"><a href=\"#1-创建webview\" class=\"headerlink\" title=\"1- 创建webview\"></a>1- 创建webview</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import * as vscode from &#x27;vscode&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">function testWebview(context: vscode.ExtensionContext): void &#123;</span><br><span class=\"line\">  context.subscriptions.push(</span><br><span class=\"line\">    vscode.commands.registerCommand(&#x27;extension.demo.openWebview&#x27;, (uri) =&gt; &#123;</span><br><span class=\"line\">      console.log(&#x27;uri&#x27;, uri);</span><br><span class=\"line\">      const panel = vscode.window.createWebviewPanel(</span><br><span class=\"line\">        &#x27;testWebview&#x27;,</span><br><span class=\"line\">        &#x27;Webview test&#x27;,</span><br><span class=\"line\">        vscode.ViewColumn.One,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          enableScripts: true,</span><br><span class=\"line\">          retainContextWhenHidden: true,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      );</span><br><span class=\"line\">      panel.webview.html = `&lt;html&gt;&lt;body&gt;你好，我是webview&lt;/body&gt;&lt;/html&gt;`;</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">export default testWebview;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>声明命令</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;onCommand:extension.demo.openWebview&quot;</span></span><br><span class=\"line\">],</span><br><span class=\"line\">\t<span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.openWebview&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;OPEN WEBVIEW&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t],</span><br><span class=\"line\">\t<span class=\"attr\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;editor/context&quot;</span>: [</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.openWebview&quot;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t],</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-加载本地资源\"><a href=\"#2-加载本地资源\" class=\"headerlink\" title=\"2- 加载本地资源\"></a>2- 加载本地资源</h1><p>出于安全考虑，Webview默认无法直接访问本地资源，它在一个孤立的上下文中运行，想要加载本地图片、js、css等必须通过特殊的<code>vscode-resource:</code>协议，网页里面<strong>所有的静态资源都要转换成这种格式，否则无法被正常加载</strong>。</p>\n<p><code>vscode-resource:</code>协议类似于<code>file:</code>协议，但它只允许访问特定的本地文件。和<code>file:</code>一样，<code>vscode-resource:</code>从磁盘加载绝对路径的资源。</p>\n<p>转换本地磁盘文件路径成webview 能打开的文件路径</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getExtensionFileVscodeResource: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context, relativePath</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> diskPath = vscode.Uri.file(path.join(context.extensionPath, relativePath));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> diskPath.with(&#123; <span class=\"attr\">scheme</span>: <span class=\"string\">&#x27;vscode-resource&#x27;</span> &#125;).toString();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>默认情况下，<code>vscode-resource:</code>只能访问以下位置中的资源：</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 扩展程序安装目录中的文件。</span><br><span class=\"line\">- 用户当前活动的工作区内。</span><br><span class=\"line\">- 当然，你还可以使用dataURI直接在Webview中嵌入资源，这种方式没有限制；</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-从文件加载HTML内容\"><a href=\"#3-从文件加载HTML内容\" class=\"headerlink\" title=\"3- 从文件加载HTML内容\"></a>3- 从文件加载HTML内容</h1><p>默认不支持从文件加载HTML，需要自己封装代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getWebviewContent(</span><br><span class=\"line\">  context: vscode.ExtensionContext,</span><br><span class=\"line\">  <span class=\"attr\">templatePath</span>: string,</span><br><span class=\"line\">): string &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> resourcePath = path.join(context.extensionPath, templatePath);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dirPath = path.dirname(resourcePath);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> html = fs.readFileSync(resourcePath, <span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 处理html内部的资源路径成可以被vscode webview 访问的路径</span></span><br><span class=\"line\">  html = html.replace(</span><br><span class=\"line\">    <span class=\"regexp\">/(&lt;link.+?href=&quot;|&lt;script.+?src=&quot;|&lt;img.+?src=&quot;)(.+?)&quot;/g</span>,</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">m, $<span class=\"number\">1</span>, $<span class=\"number\">2</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> $<span class=\"number\">1</span> + vscode.Uri.file(path.resolve(dirPath, $<span class=\"number\">2</span>)).with(</span><br><span class=\"line\">        &#123; <span class=\"attr\">scheme</span>: <span class=\"string\">&#x27;vscode-resource&#x27;</span> &#125;).toString();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> html;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-消息通信\"><a href=\"#4-消息通信\" class=\"headerlink\" title=\"4- 消息通信\"></a>4- 消息通信</h1><p>重头戏来了，<code>Webview</code>和普通网页非常类似，不能直接调用任何<code>VSCode</code>API，但是，它唯一特别之处就在于多了一个名叫<code>acquireVsCodeApi</code>的方法，执行这个方法会返回一个超级阉割版的<code>vscode</code>对象，这个对象里面有且仅有如下3个可以和插件通信的API：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- getState</span><br><span class=\"line\">- postMessage</span><br><span class=\"line\">- setState</span><br></pre></td></tr></table></figure>\n\n<p>插件给<code>Webview</code>发送消息: 支持发送任意可以被<code>JSON</code>化的数据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panel.webview.postMessage(&#123;text: &quot;hello&quot;&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>webview 端接收</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.addEventListener(&#x27;message&#x27;, event =&gt; &#123;</span><br><span class=\"line\">\tconst message = event.data;</span><br><span class=\"line\">\tconsole.log(&#x27;Webview接收到的消息：&#x27;, message);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>Webview</code>主动发送消息给插件：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.postMessage(&#123;text: &#x27;你好，我是Webview啊！&#x27;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>插件接收：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panel.webview.onDidReceiveMessage(message =&gt; &#123;</span><br><span class=\"line\">\tconsole.log(&#x27;插件收到的消息：&#x27;, message);</span><br><span class=\"line\">&#125;, undefined, context.subscriptions);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-封装通信\"><a href=\"#5-封装通信\" class=\"headerlink\" title=\"5- 封装通信\"></a>5- 封装通信</h1><h1 id=\"6-主题适配\"><a href=\"#6-主题适配\" class=\"headerlink\" title=\"6- 主题适配\"></a>6- 主题适配</h1><p><code>Webview</code>可以根据<code>VS Code</code>的当前主题更改其外观，原理是body上面添加当前主题名称，主要有以下三种：</p>\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode-light - 浅色主题；</span><br><span class=\"line\">vscode-dark -深色主题；</span><br><span class=\"line\">vscode-high-contrast - 高对比度主题;</span><br></pre></td></tr></table></figure>\n\n<p>可以通过自己写样式来适配不同主题：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 浅色主题 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.body</span><span class=\"selector-class\">.vscode-light</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 深色主题 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span><span class=\"selector-class\">.vscode-dark</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#252526</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 高对比度主题 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span><span class=\"selector-class\">.vscode-high-contrast</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"7-生命周期\"><a href=\"#7-生命周期\" class=\"headerlink\" title=\"7- 生命周期\"></a>7- 生命周期</h1><p><code>webview</code>由创建它的扩展程序所有，返回的<code>panel</code>对象你必须自己保存，如果你的扩展程序丢失了这个引用，那么将无法再次重新访问该<code>webview</code>，即使Web视图继续显示在<code>vscode</code>中。</p>\n<p>用户也可以随时关闭<code>webview</code>面板。当用户关闭webview面板时，webview本身将被销毁，此时不能再使用panel引用，否则将会出现异常，可以通过监听<code>onDidDispose</code>事件在这里面做一些销毁操作。</p>\n<p>可以通过<code>panel.dispose()</code>方法主动关闭webview。</p>\n<h1 id=\"8-状态保持\"><a href=\"#8-状态保持\" class=\"headerlink\" title=\"8- 状态保持\"></a>8- 状态保持</h1><p>当webview移动到后台又再次显示时，webview中的任何状态都将丢失。</p>\n<p>解决此问题的最佳方法是使你的webview无状态，通过消息传递来保存webview的状态。</p>\n<h2 id=\"8-1-state\"><a href=\"#8-1-state\" class=\"headerlink\" title=\"8.1- state\"></a>8.1- state</h2><p>在webview的js中我们可以使用<code>vscode.getState()</code>和<code>vscode.setState()</code>方法来保存和恢复JSON可序列化状态对象。当webview被隐藏时，即使webview内容本身被破坏，这些状态仍然会保存。当然了，当webview被销毁时，状态将被销毁。</p>\n<h2 id=\"8-2-序列化\"><a href=\"#8-2-序列化\" class=\"headerlink\" title=\"8.2 序列化\"></a>8.2 序列化</h2><p>通过注册<code>WebviewPanelSerializer</code>可以实现在<code>VScode</code>重启后自动恢复你的<code>webview</code>，当然，序列化其实也是建立在<code>getState</code>和<code>setState</code>之上的。</p>\n<p>注册方法：<code>vscode.window.registerWebviewPanelSerializer</code></p>\n<h2 id=\"8-3-retainContextWhenHidden\"><a href=\"#8-3-retainContextWhenHidden\" class=\"headerlink\" title=\"8.3- retainContextWhenHidden\"></a>8.3- retainContextWhenHidden</h2><p>对于具有非常复杂的UI或状态且无法快速保存和恢复的<code>webview</code>，我们可以直接使用<code>retainContextWhenHidden</code>选项。设置<code>retainContextWhenHidden: true</code>后即使webview被隐藏到后台其状态也不会丢失。</p>\n<p>尽管<code>retainContextWhenHidden</code>很有吸引力，但它需要很高的内存开销，一般建议在实在没办法的时候才启用。<br><code>getState</code>和<code>setState</code>是持久化的首选方式，因为它们的性能开销要比<code>retainContextWhenHidden</code>低得多。</p>\n<h1 id=\"9-API\"><a href=\"#9-API\" class=\"headerlink\" title=\"9- API\"></a>9- API</h1><table>\n<thead>\n<tr>\n<th align=\"left\">Guide on VS Code Website</th>\n<th align=\"left\">API &amp; Contribution</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/command\">Command</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#commands\">commands</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/color-theme\">Color Theme</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.themes\">contributes.themes</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/file-icon-theme\">File Icon Theme</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.iconThemes\">contributes.iconThemes</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/product-icon-theme\">Product Icon Theme</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.productIconThemes\">contributes.productIconThemes</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/tree-view\">Tree View</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#window.createTreeView\">window.createTreeView</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#window.registerTreeDataProvider\">window.registerTreeDataProvider</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#TreeView\">TreeView</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#TreeDataProvider\">TreeDataProvider</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.views\">contributes.views</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.viewsContainers\">contributes.viewsContainers</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/webview\">Webview</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#window.createWebviewPanel\">window.createWebviewPanel</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#window.registerWebviewPanelSerializer\">window.registerWebviewPanelSerializer</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/custom-editors\">Custom Editors</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#window.registerCustomEditorProvider\">window.registerCustomEditorProvider</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#CustomTextEditorProvider\">CustomTextEditorProvider</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.customEditors\">contributes.customEditors</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/virtual-documents\">Virtual Documents</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.registerTextDocumentContentProvider\">workspace.registerTextDocumentContentProvider</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#commands.registerCommand\">commands.registerCommand</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#window.showInputBox\">window.showInputBox</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/virtual-workspaces\">Virtual Workspaces</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.fs\">workspace.fs</a> capabilities.virtualWorkspaces</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/workspace-trust\">Workspace Trust</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.isTrusted\">workspace.isTrusted</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.onDidGrantWorkspaceTrust\">workspace.onDidGrantWorkspaceTrust</a> capabilities.untrustedWorkspaces</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/task-provider\">Task Provider</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#tasks.registerTaskProvider\">tasks.registerTaskProvider</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#Task\">Task</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#ShellExecution\">ShellExecution</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.taskDefinitions\">contributes.taskDefinitions</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/scm-provider\">Source Control</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#workspace.workspaceFolders\">workspace.workspaceFolders</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#SourceControl\">SourceControl</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#SourceControlResourceGroup\">SourceControlResourceGroup</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#scm.createSourceControl\">scm.createSourceControl</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#TextDocumentContentProvider\">TextDocumentContentProvider</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.menus\">contributes.menus</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/debugger-extension\">Debugger Extension</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.breakpoints\">contributes.breakpoints</a> <a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.debuggers\">contributes.debuggers</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#debug\">debug</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/markdown-extension\">Markdown Extension</a></td>\n<td align=\"left\">markdown.previewStyles markdown.markdownItPlugins markdown.previewScripts</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/testing\">Test Extension</a></td>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/references/vscode-api#TestController\">TestController</a> <a href=\"https://code.visualstudio.com/api/references/vscode-api#TestItem\">TestItem</a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://code.visualstudio.com/api/extension-guides/custom-data-extension\">Custom Data Extension</a></td>\n<td align=\"left\">contributes.html.customData contributes.css.customData</td>\n</tr>\n</tbody></table>\n"},{"title":"vscode插件开发3-跳转、补全、提示","date":"2022-01-18T07:17:55.000Z","_content":"\n# 1- 跳转到定义\n\n```\nvscode.language.registerDefinitionProvider\nnew vscode.location()\n```\n\n```react\n\"activationEvents\": [\n\t\"onLanguage: json\"\n]\n```\n\n`new vscode.Location`接收2个参数，第一个是要跳转到文件的路径，第二个是跳转之后光标所在位置，接收`Range`或者`Position`对象，`Position`对象的初始化接收2个参数，行`row`和列`col`。\n\n# 2- 高亮显示范围\n\n```tsx\nvscode.languages.registerCompletionItemProvider\n\n// 参数\n- 第一个是要关联的文件类型\n- 第二个是一个对象，里面必须包含provideCompletionItems 和 resolveCompletionItem 2个方法\n- 第三个是一个可选的触发提示的字符列表\n```\n\n# 3- 悬停提示\n\n```tsx\nvscode.languages.registerHoverProvider\n```\n\n","source":"_posts/vscode插件开发3-跳转、补全、提示.md","raw":"---\ntitle: vscode插件开发3-跳转、补全、提示\ndate: 2022-01-18 15:17:55\ntags: viscose, extension, 跳转到定义, 自动补全, 悬停提示\n---\n\n# 1- 跳转到定义\n\n```\nvscode.language.registerDefinitionProvider\nnew vscode.location()\n```\n\n```react\n\"activationEvents\": [\n\t\"onLanguage: json\"\n]\n```\n\n`new vscode.Location`接收2个参数，第一个是要跳转到文件的路径，第二个是跳转之后光标所在位置，接收`Range`或者`Position`对象，`Position`对象的初始化接收2个参数，行`row`和列`col`。\n\n# 2- 高亮显示范围\n\n```tsx\nvscode.languages.registerCompletionItemProvider\n\n// 参数\n- 第一个是要关联的文件类型\n- 第二个是一个对象，里面必须包含provideCompletionItems 和 resolveCompletionItem 2个方法\n- 第三个是一个可选的触发提示的字符列表\n```\n\n# 3- 悬停提示\n\n```tsx\nvscode.languages.registerHoverProvider\n```\n\n","slug":"vscode插件开发3-跳转、补全、提示","published":1,"updated":"2022-01-21T03:42:20.374Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckys47nb00002c9wo3lqu1f43","content":"<h1 id=\"1-跳转到定义\"><a href=\"#1-跳转到定义\" class=\"headerlink\" title=\"1- 跳转到定义\"></a>1- 跳转到定义</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.language.registerDefinitionProvider</span><br><span class=\"line\">new vscode.location()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;activationEvents&quot;: [</span><br><span class=\"line\">\t&quot;onLanguage: json&quot;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p><code>new vscode.Location</code>接收2个参数，第一个是要跳转到文件的路径，第二个是跳转之后光标所在位置，接收<code>Range</code>或者<code>Position</code>对象，<code>Position</code>对象的初始化接收2个参数，行<code>row</code>和列<code>col</code>。</p>\n<h1 id=\"2-高亮显示范围\"><a href=\"#2-高亮显示范围\" class=\"headerlink\" title=\"2- 高亮显示范围\"></a>2- 高亮显示范围</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.languages.registerCompletionItemProvider</span><br><span class=\"line\"></span><br><span class=\"line\">// 参数</span><br><span class=\"line\">- 第一个是要关联的文件类型</span><br><span class=\"line\">- 第二个是一个对象，里面必须包含provideCompletionItems 和 resolveCompletionItem 2个方法</span><br><span class=\"line\">- 第三个是一个可选的触发提示的字符列表</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-悬停提示\"><a href=\"#3-悬停提示\" class=\"headerlink\" title=\"3- 悬停提示\"></a>3- 悬停提示</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.languages.registerHoverProvider</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-跳转到定义\"><a href=\"#1-跳转到定义\" class=\"headerlink\" title=\"1- 跳转到定义\"></a>1- 跳转到定义</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.language.registerDefinitionProvider</span><br><span class=\"line\">new vscode.location()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;activationEvents&quot;: [</span><br><span class=\"line\">\t&quot;onLanguage: json&quot;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p><code>new vscode.Location</code>接收2个参数，第一个是要跳转到文件的路径，第二个是跳转之后光标所在位置，接收<code>Range</code>或者<code>Position</code>对象，<code>Position</code>对象的初始化接收2个参数，行<code>row</code>和列<code>col</code>。</p>\n<h1 id=\"2-高亮显示范围\"><a href=\"#2-高亮显示范围\" class=\"headerlink\" title=\"2- 高亮显示范围\"></a>2- 高亮显示范围</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.languages.registerCompletionItemProvider</span><br><span class=\"line\"></span><br><span class=\"line\">// 参数</span><br><span class=\"line\">- 第一个是要关联的文件类型</span><br><span class=\"line\">- 第二个是一个对象，里面必须包含provideCompletionItems 和 resolveCompletionItem 2个方法</span><br><span class=\"line\">- 第三个是一个可选的触发提示的字符列表</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-悬停提示\"><a href=\"#3-悬停提示\" class=\"headerlink\" title=\"3- 悬停提示\"></a>3- 悬停提示</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.languages.registerHoverProvider</span><br></pre></td></tr></table></figure>\n\n"},{"title":"vscode插件开发2","date":"2022-01-17T11:27:00.000Z","Tags":"vscode, extension","_content":"\n# 1 命令\n\n注册命令\n\n```js\n// tension.ts\nconst disposable = vscode.commands.registerCommand('extension.sayHello', ()=> {\n  // ...\n})\ncontext.subscriptions.push(disposable)\n```\n\n声明命令\n\n```json\n// package.json\n\"commands\": [\n  {\n    \"command\": \"extension.sayHello\",\n    \"title\": \"Hello World\"\n  }\n]\n```\n\nNote:  所有注册类API执行后都会返回一个disposable对象，必须放到```context.subscriptions```中去\n\n## 1.1 回调函数参数\n\n可选参数-uri\n\n- 资源管理器： 选中的资源（文件/文件夹）路径\n- 文件编辑器： 文件路径\n- 快捷键： 空\n\n示例：\n\n```tsx\n\tlet disposable1 = vscode.commands.registerCommand('extension.demo.getCurrentFilePath', (uri) => {\n\t\tvscode.window.showInformationMessage(`current file/folder's path is: ${uri? uri.path : 'empty'}`);\n\t});\n\tcontext.subscriptions.push(disposable1);\n```\n\n```json\n\t// 声明命令\n\t\"activationEvents\": [\n\t\t\t\t\"onCommand:extension.demo.getCurrentFilePath\"\n\t],\t\n\t// 命令的具体信息\n\t\"commands\": [\n\t\t\t{\n\t\t\t\t\"command\": \"extension.demo.getCurrentFilePath\",\n\t\t\t\t\"title\": \"get current file/folder path\"\n\t\t\t}\n\t],\n\t// 命令触发时机-- 编辑器获焦后邮件下拉框 & 文件系统右键下拉框\n\t\"menus\": {\n\t\t\t\"editor/context\": [\n\t\t\t\t{\n\t\t\t\t\t\"when\": \"eidtorFocus\",\n\t\t\t\t\t\"command\": \"extension.demo.getCurrentFilePath\",\n\t\t\t\t\t\"group\": \"navigation\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"explorer/context\": [\n\t\t\t\t{\n\t\t\t\t\t\"command\": \"extension.demo.getCurrentFilePath\",\n\t\t\t\t\t\"group\": \"navigation\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n```\n\n## 1.2 编辑器命令\n\n```js\nvscode.commands.registerTextEditorCommand('commandId', (textEditor, edit) => {\n  \n})\n// package.json\n\"activationEvents\": [\n  \"onCommand:extension.testEditorCommand\"\n],\n\"contributes\": {\n    \"commands\": [\n      {\n        \"command\": \"extension.testEditorCommand\",\n        \"title\": \"TEST EDITOR COMMAND\"\n      }\n    ],\n}\n```\n\n-- 按照上述没有看到该命令被激活？？？\n\n激活： 只有在编辑器被激活时调用才生效， 参数textEditor可以拿到活动编辑器\n\n## 1.3 执行命令\n\n```js\nvscode.commands.executeCommand(\"命令\"， params1, ...).then((res) => {// ...})\n```\n\n## 1.4 获取所有命令\n\n```js\nvscode.commands.getCommands().then(allCommands => {//...})\n```\n\n# 2 菜单\n\n完整的菜单配置\n\n```json\n\"menus\": {\n  \"editor/title\": [\n    {\n      \"when\": \"editorFocus\",\n      \"command\": \"extension.sayHello\",\n      \"alt\": \"extension.sayHello\",\n      \"group\": \"navigation\"\n    },\n  ],\n}\n// editor/title是key值，定义这个菜单出现在哪里；\n// when控制菜单何时出现；\n// command定义菜单被点击后要执行什么操作；\n// alt定义备用命令，按住alt键打开菜单时将执行对应命令；\n// group定义菜单分组；\n```\n\n## 2.1 出现的位置\n\n目前插件可以给以下场景配置自定义菜单\n\n```js\n资源管理器上下文菜单 - explorer/context\n编辑器上下文菜单 - editor/context\n编辑标题菜单栏 - editor/title\n编辑器标题上下文菜单 - editor/title/context\n调试callstack视图上下文菜单 - debug/callstack/context\nSCM标题菜单 -scm/title\nSCM资源组菜单 -scm/resourceGroup/context\nSCM资源菜单 -scm/resource/context\nSCM更改标题菜单 -scm/change/title\n左侧视图标题菜单 -view/title\n视图项菜单 -view/item/context\n控制命令是否显示在命令选项板中 - commandPalette\n```\n\n最常见的是`explorer/context`和`editor/context`\n\n## 2.2 when\n\n通过when语句，vs code可以很好的控制什么时候显示菜单项\n\nwhen的常用语法\n\n```json\nresourceLangId == javascript：当编辑的文件是js文件时；\nresourceFilename == test.js：当当前打开文件名是test.js时；\nisLinux、isMac、isWindows：判断当前操作系统；\neditorFocus：编辑器具有焦点时；\neditorHasSelection：编辑器中有文本被选中时；\nview == someViewId：当当前视图ID等于someViewId时；\n...\n```\n\n多个条件可以通过与或非进行组合，例如：`editorFocus && isWindows && resourceLangId == javascript`。\n\n[官方文档-when](https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts)\n\n## 2.3 alt\n\n表示没有按下alt键时，点击右键菜单执行的是`command`对应的命令，而按下了alt键后执行的是alt对应的命令\n\n## 2.4 group\n\n### 2.4.1 组间排序\n\n控制菜单的分组和排序。不同的菜单拥有不同的默认分组。\n\n```json\nnavigation- 放在这个组的永远排在最前面；\n1_modification - 更改组；\n9_cutcopypaste - 编辑组\nz_commands - 最后一个默认组，其中包含用于打开命令选项板的条目。\n```\n\n除了`navigation`是强制放在最前面之外，其它分组都是按照0-9、a-z的顺序排列的\n\n`explorer/context`有这些默认组：\n\n ```json\n navigation - 放在这个组的永远排在最前面；\n 2_workspace - 与工作空间操作相关的命令。\n 3_compare - 与差异编辑器中的文件比较相关的命令。\n 4_search - 与在搜索视图中搜索相关的命令。\n 5_cutcopypaste - 与剪切，复制和粘贴文件相关的命令。\n 7_modification - 与修改文件相关的命令。\n ```\n\n在`编辑器选项卡上下文菜单`有这些默认组：\n\n ```json\n 1_close - 与关闭编辑器相关的命令。\n 3_preview - 与固定编辑器相关的命令。\n ```\n\n在`editor/title`有这些默认组：\n\n ```json\n 1_diff - 与使用差异编辑器相关的命令。\n 3_open - 与打开编辑器相关的命令。\n 5_close - 与关闭编辑器相关的命令\n ```\n\n### 2.4.2 组内排序\n\n默认同一个组的顺序取决于菜单名称，如果想自定义排序的话可以再组后面通过`@<number>`的方式来自定义顺序，例如：\n\n```json\n\"editor/context\": [\n\t{\n\t\t\"when\": \"editorFocus\",\n\t\t\"command\": \"extension.sayHello\",\n\t\t// 强制放在navigation组的第2个\n\t\t\"group\": \"navigation@2\"\n\t},\n\t{\n\t\t\"when\": \"editorFocus\",\n\t\t\"command\": \"extension.demo.getCurrentFilePath\",\n\t\t// 强制放在navigation组的第1个\n\t\t\"group\": \"navigation@1\"\n\t}\n]\n```\n\n# 3 快捷键\n\n```json\n\"contributes\": {\n\t\"keybindings\": [{\n\t\t// 指定快捷键执行的操作\n\t\t\"command\": \"extension.sayHello\",\n\t\t// windows下快捷键\n\t\t\"key\": \"ctrl+f10\",\n\t\t// mac下快捷键\n\t\t\"mac\": \"cmd+f10\",\n\t\t// 快捷键何时生效\n\t\t\"when\": \"editorTextFocus\"\n\t}]\n}\n```\n\n[官方文档--快捷键绑定](https://code.visualstudio.com/docs/getstarted/keybindings)\n\n","source":"_posts/vscode插件开发2-command+menu+keybindings.md","raw":"---\ntitle: vscode插件开发2 \ndate: 2022-01-17 19:27:00\nTags: vscode, extension\n---\n\n# 1 命令\n\n注册命令\n\n```js\n// tension.ts\nconst disposable = vscode.commands.registerCommand('extension.sayHello', ()=> {\n  // ...\n})\ncontext.subscriptions.push(disposable)\n```\n\n声明命令\n\n```json\n// package.json\n\"commands\": [\n  {\n    \"command\": \"extension.sayHello\",\n    \"title\": \"Hello World\"\n  }\n]\n```\n\nNote:  所有注册类API执行后都会返回一个disposable对象，必须放到```context.subscriptions```中去\n\n## 1.1 回调函数参数\n\n可选参数-uri\n\n- 资源管理器： 选中的资源（文件/文件夹）路径\n- 文件编辑器： 文件路径\n- 快捷键： 空\n\n示例：\n\n```tsx\n\tlet disposable1 = vscode.commands.registerCommand('extension.demo.getCurrentFilePath', (uri) => {\n\t\tvscode.window.showInformationMessage(`current file/folder's path is: ${uri? uri.path : 'empty'}`);\n\t});\n\tcontext.subscriptions.push(disposable1);\n```\n\n```json\n\t// 声明命令\n\t\"activationEvents\": [\n\t\t\t\t\"onCommand:extension.demo.getCurrentFilePath\"\n\t],\t\n\t// 命令的具体信息\n\t\"commands\": [\n\t\t\t{\n\t\t\t\t\"command\": \"extension.demo.getCurrentFilePath\",\n\t\t\t\t\"title\": \"get current file/folder path\"\n\t\t\t}\n\t],\n\t// 命令触发时机-- 编辑器获焦后邮件下拉框 & 文件系统右键下拉框\n\t\"menus\": {\n\t\t\t\"editor/context\": [\n\t\t\t\t{\n\t\t\t\t\t\"when\": \"eidtorFocus\",\n\t\t\t\t\t\"command\": \"extension.demo.getCurrentFilePath\",\n\t\t\t\t\t\"group\": \"navigation\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"explorer/context\": [\n\t\t\t\t{\n\t\t\t\t\t\"command\": \"extension.demo.getCurrentFilePath\",\n\t\t\t\t\t\"group\": \"navigation\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n```\n\n## 1.2 编辑器命令\n\n```js\nvscode.commands.registerTextEditorCommand('commandId', (textEditor, edit) => {\n  \n})\n// package.json\n\"activationEvents\": [\n  \"onCommand:extension.testEditorCommand\"\n],\n\"contributes\": {\n    \"commands\": [\n      {\n        \"command\": \"extension.testEditorCommand\",\n        \"title\": \"TEST EDITOR COMMAND\"\n      }\n    ],\n}\n```\n\n-- 按照上述没有看到该命令被激活？？？\n\n激活： 只有在编辑器被激活时调用才生效， 参数textEditor可以拿到活动编辑器\n\n## 1.3 执行命令\n\n```js\nvscode.commands.executeCommand(\"命令\"， params1, ...).then((res) => {// ...})\n```\n\n## 1.4 获取所有命令\n\n```js\nvscode.commands.getCommands().then(allCommands => {//...})\n```\n\n# 2 菜单\n\n完整的菜单配置\n\n```json\n\"menus\": {\n  \"editor/title\": [\n    {\n      \"when\": \"editorFocus\",\n      \"command\": \"extension.sayHello\",\n      \"alt\": \"extension.sayHello\",\n      \"group\": \"navigation\"\n    },\n  ],\n}\n// editor/title是key值，定义这个菜单出现在哪里；\n// when控制菜单何时出现；\n// command定义菜单被点击后要执行什么操作；\n// alt定义备用命令，按住alt键打开菜单时将执行对应命令；\n// group定义菜单分组；\n```\n\n## 2.1 出现的位置\n\n目前插件可以给以下场景配置自定义菜单\n\n```js\n资源管理器上下文菜单 - explorer/context\n编辑器上下文菜单 - editor/context\n编辑标题菜单栏 - editor/title\n编辑器标题上下文菜单 - editor/title/context\n调试callstack视图上下文菜单 - debug/callstack/context\nSCM标题菜单 -scm/title\nSCM资源组菜单 -scm/resourceGroup/context\nSCM资源菜单 -scm/resource/context\nSCM更改标题菜单 -scm/change/title\n左侧视图标题菜单 -view/title\n视图项菜单 -view/item/context\n控制命令是否显示在命令选项板中 - commandPalette\n```\n\n最常见的是`explorer/context`和`editor/context`\n\n## 2.2 when\n\n通过when语句，vs code可以很好的控制什么时候显示菜单项\n\nwhen的常用语法\n\n```json\nresourceLangId == javascript：当编辑的文件是js文件时；\nresourceFilename == test.js：当当前打开文件名是test.js时；\nisLinux、isMac、isWindows：判断当前操作系统；\neditorFocus：编辑器具有焦点时；\neditorHasSelection：编辑器中有文本被选中时；\nview == someViewId：当当前视图ID等于someViewId时；\n...\n```\n\n多个条件可以通过与或非进行组合，例如：`editorFocus && isWindows && resourceLangId == javascript`。\n\n[官方文档-when](https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts)\n\n## 2.3 alt\n\n表示没有按下alt键时，点击右键菜单执行的是`command`对应的命令，而按下了alt键后执行的是alt对应的命令\n\n## 2.4 group\n\n### 2.4.1 组间排序\n\n控制菜单的分组和排序。不同的菜单拥有不同的默认分组。\n\n```json\nnavigation- 放在这个组的永远排在最前面；\n1_modification - 更改组；\n9_cutcopypaste - 编辑组\nz_commands - 最后一个默认组，其中包含用于打开命令选项板的条目。\n```\n\n除了`navigation`是强制放在最前面之外，其它分组都是按照0-9、a-z的顺序排列的\n\n`explorer/context`有这些默认组：\n\n ```json\n navigation - 放在这个组的永远排在最前面；\n 2_workspace - 与工作空间操作相关的命令。\n 3_compare - 与差异编辑器中的文件比较相关的命令。\n 4_search - 与在搜索视图中搜索相关的命令。\n 5_cutcopypaste - 与剪切，复制和粘贴文件相关的命令。\n 7_modification - 与修改文件相关的命令。\n ```\n\n在`编辑器选项卡上下文菜单`有这些默认组：\n\n ```json\n 1_close - 与关闭编辑器相关的命令。\n 3_preview - 与固定编辑器相关的命令。\n ```\n\n在`editor/title`有这些默认组：\n\n ```json\n 1_diff - 与使用差异编辑器相关的命令。\n 3_open - 与打开编辑器相关的命令。\n 5_close - 与关闭编辑器相关的命令\n ```\n\n### 2.4.2 组内排序\n\n默认同一个组的顺序取决于菜单名称，如果想自定义排序的话可以再组后面通过`@<number>`的方式来自定义顺序，例如：\n\n```json\n\"editor/context\": [\n\t{\n\t\t\"when\": \"editorFocus\",\n\t\t\"command\": \"extension.sayHello\",\n\t\t// 强制放在navigation组的第2个\n\t\t\"group\": \"navigation@2\"\n\t},\n\t{\n\t\t\"when\": \"editorFocus\",\n\t\t\"command\": \"extension.demo.getCurrentFilePath\",\n\t\t// 强制放在navigation组的第1个\n\t\t\"group\": \"navigation@1\"\n\t}\n]\n```\n\n# 3 快捷键\n\n```json\n\"contributes\": {\n\t\"keybindings\": [{\n\t\t// 指定快捷键执行的操作\n\t\t\"command\": \"extension.sayHello\",\n\t\t// windows下快捷键\n\t\t\"key\": \"ctrl+f10\",\n\t\t// mac下快捷键\n\t\t\"mac\": \"cmd+f10\",\n\t\t// 快捷键何时生效\n\t\t\"when\": \"editorTextFocus\"\n\t}]\n}\n```\n\n[官方文档--快捷键绑定](https://code.visualstudio.com/docs/getstarted/keybindings)\n\n","slug":"vscode插件开发2-command+menu+keybindings","published":1,"updated":"2022-01-18T07:12:52.451Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckys47nb10004c9wocout3lti","content":"<h1 id=\"1-命令\"><a href=\"#1-命令\" class=\"headerlink\" title=\"1 命令\"></a>1 命令</h1><p>注册命令</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// tension.ts</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> disposable = vscode.commands.registerCommand(<span class=\"string\">&#x27;extension.sayHello&#x27;</span>, <span class=\"function\">()=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">context.subscriptions.push(disposable)</span><br></pre></td></tr></table></figure>\n\n<p>声明命令</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package.json</span></span><br><span class=\"line\"><span class=\"string\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Hello World&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>Note:  所有注册类API执行后都会返回一个disposable对象，必须放到<code>context.subscriptions</code>中去</p>\n<h2 id=\"1-1-回调函数参数\"><a href=\"#1-1-回调函数参数\" class=\"headerlink\" title=\"1.1 回调函数参数\"></a>1.1 回调函数参数</h2><p>可选参数-uri</p>\n<ul>\n<li>资源管理器： 选中的资源（文件/文件夹）路径</li>\n<li>文件编辑器： 文件路径</li>\n<li>快捷键： 空</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let disposable1 = vscode.commands.registerCommand(&#x27;extension.demo.getCurrentFilePath&#x27;, (uri) =&gt; &#123;</span><br><span class=\"line\">\tvscode.window.showInformationMessage(`current file/folder&#x27;s path is: $&#123;uri? uri.path : &#x27;empty&#x27;&#125;`);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">context.subscriptions.push(disposable1);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明命令</span></span><br><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;onCommand:extension.demo.getCurrentFilePath&quot;</span></span><br><span class=\"line\">],\t</span><br><span class=\"line\"><span class=\"comment\">// 命令的具体信息</span></span><br><span class=\"line\"><span class=\"string\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.getCurrentFilePath&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;get current file/folder path&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"comment\">// 命令触发时机-- 编辑器获焦后邮件下拉框 &amp; 文件系统右键下拉框</span></span><br><span class=\"line\"><span class=\"string\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;editor/context&quot;</span>: [</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;eidtorFocus&quot;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.getCurrentFilePath&quot;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t],</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;explorer/context&quot;</span>: [</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.getCurrentFilePath&quot;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t]</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-2-编辑器命令\"><a href=\"#1-2-编辑器命令\" class=\"headerlink\" title=\"1.2 编辑器命令\"></a>1.2 编辑器命令</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.commands.registerTextEditorCommand(<span class=\"string\">&#x27;commandId&#x27;</span>, <span class=\"function\">(<span class=\"params\">textEditor, edit</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// package.json</span></span><br><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">  <span class=\"string\">&quot;onCommand:extension.testEditorCommand&quot;</span></span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.testEditorCommand&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;TEST EDITOR COMMAND&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>– 按照上述没有看到该命令被激活？？？</p>\n<p>激活： 只有在编辑器被激活时调用才生效， 参数textEditor可以拿到活动编辑器</p>\n<h2 id=\"1-3-执行命令\"><a href=\"#1-3-执行命令\" class=\"headerlink\" title=\"1.3 执行命令\"></a>1.3 执行命令</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.commands.executeCommand(<span class=\"string\">&quot;命令&quot;</span>， params1, ...).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;<span class=\"comment\">// ...&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-4-获取所有命令\"><a href=\"#1-4-获取所有命令\" class=\"headerlink\" title=\"1.4 获取所有命令\"></a>1.4 获取所有命令</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.commands.getCommands().then(<span class=\"function\"><span class=\"params\">allCommands</span> =&gt;</span> &#123;<span class=\"comment\">//...&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-菜单\"><a href=\"#2-菜单\" class=\"headerlink\" title=\"2 菜单\"></a>2 菜单</h1><p>完整的菜单配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;editor/title&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;editorFocus&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;alt&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// editor/title是key值，定义这个菜单出现在哪里；</span></span><br><span class=\"line\"><span class=\"comment\">// when控制菜单何时出现；</span></span><br><span class=\"line\"><span class=\"comment\">// command定义菜单被点击后要执行什么操作；</span></span><br><span class=\"line\"><span class=\"comment\">// alt定义备用命令，按住alt键打开菜单时将执行对应命令；</span></span><br><span class=\"line\"><span class=\"comment\">// group定义菜单分组；</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-1-出现的位置\"><a href=\"#2-1-出现的位置\" class=\"headerlink\" title=\"2.1 出现的位置\"></a>2.1 出现的位置</h2><p>目前插件可以给以下场景配置自定义菜单</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">资源管理器上下文菜单 - explorer/context</span><br><span class=\"line\">编辑器上下文菜单 - editor/context</span><br><span class=\"line\">编辑标题菜单栏 - editor/title</span><br><span class=\"line\">编辑器标题上下文菜单 - editor/title/context</span><br><span class=\"line\">调试callstack视图上下文菜单 - debug/callstack/context</span><br><span class=\"line\">SCM标题菜单 -scm/title</span><br><span class=\"line\">SCM资源组菜单 -scm/resourceGroup/context</span><br><span class=\"line\">SCM资源菜单 -scm/resource/context</span><br><span class=\"line\">SCM更改标题菜单 -scm/change/title</span><br><span class=\"line\">左侧视图标题菜单 -view/title</span><br><span class=\"line\">视图项菜单 -view/item/context</span><br><span class=\"line\">控制命令是否显示在命令选项板中 - commandPalette</span><br></pre></td></tr></table></figure>\n\n<p>最常见的是<code>explorer/context</code>和<code>editor/context</code></p>\n<h2 id=\"2-2-when\"><a href=\"#2-2-when\" class=\"headerlink\" title=\"2.2 when\"></a>2.2 when</h2><p>通过when语句，vs code可以很好的控制什么时候显示菜单项</p>\n<p>when的常用语法</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resourceLangId == javascript：当编辑的文件是js文件时；</span><br><span class=\"line\">resourceFilename == test.js：当当前打开文件名是test.js时；</span><br><span class=\"line\">isLinux、isMac、isWindows：判断当前操作系统；</span><br><span class=\"line\">editorFocus：编辑器具有焦点时；</span><br><span class=\"line\">editorHasSelection：编辑器中有文本被选中时；</span><br><span class=\"line\">view == someViewId：当当前视图ID等于someViewId时；</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>多个条件可以通过与或非进行组合，例如：<code>editorFocus &amp;&amp; isWindows &amp;&amp; resourceLangId == javascript</code>。</p>\n<p><a href=\"https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts\">官方文档-when</a></p>\n<h2 id=\"2-3-alt\"><a href=\"#2-3-alt\" class=\"headerlink\" title=\"2.3 alt\"></a>2.3 alt</h2><p>表示没有按下alt键时，点击右键菜单执行的是<code>command</code>对应的命令，而按下了alt键后执行的是alt对应的命令</p>\n<h2 id=\"2-4-group\"><a href=\"#2-4-group\" class=\"headerlink\" title=\"2.4 group\"></a>2.4 group</h2><h3 id=\"2-4-1-组间排序\"><a href=\"#2-4-1-组间排序\" class=\"headerlink\" title=\"2.4.1 组间排序\"></a>2.4.1 组间排序</h3><p>控制菜单的分组和排序。不同的菜单拥有不同的默认分组。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">navigation- 放在这个组的永远排在最前面；</span><br><span class=\"line\"><span class=\"number\">1</span>_modification - 更改组；</span><br><span class=\"line\"><span class=\"number\">9</span>_cutcopypaste - 编辑组</span><br><span class=\"line\">z_commands - 最后一个默认组，其中包含用于打开命令选项板的条目。</span><br></pre></td></tr></table></figure>\n\n<p>除了<code>navigation</code>是强制放在最前面之外，其它分组都是按照0-9、a-z的顺序排列的</p>\n<p><code>explorer/context</code>有这些默认组：</p>\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">navigation - 放在这个组的永远排在最前面；</span><br><span class=\"line\"><span class=\"number\">2</span>_workspace - 与工作空间操作相关的命令。</span><br><span class=\"line\"><span class=\"number\">3</span>_compare - 与差异编辑器中的文件比较相关的命令。</span><br><span class=\"line\"><span class=\"number\">4</span>_search - 与在搜索视图中搜索相关的命令。</span><br><span class=\"line\"><span class=\"number\">5</span>_cutcopypaste - 与剪切，复制和粘贴文件相关的命令。</span><br><span class=\"line\"><span class=\"number\">7</span>_modification - 与修改文件相关的命令。</span><br></pre></td></tr></table></figure>\n\n<p>在<code>编辑器选项卡上下文菜单</code>有这些默认组：</p>\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>_close - 与关闭编辑器相关的命令。</span><br><span class=\"line\"><span class=\"number\">3</span>_preview - 与固定编辑器相关的命令。</span><br></pre></td></tr></table></figure>\n\n<p>在<code>editor/title</code>有这些默认组：</p>\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>_diff - 与使用差异编辑器相关的命令。</span><br><span class=\"line\"><span class=\"number\">3</span>_open - 与打开编辑器相关的命令。</span><br><span class=\"line\"><span class=\"number\">5</span>_close - 与关闭编辑器相关的命令</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-2-组内排序\"><a href=\"#2-4-2-组内排序\" class=\"headerlink\" title=\"2.4.2 组内排序\"></a>2.4.2 组内排序</h3><p>默认同一个组的顺序取决于菜单名称，如果想自定义排序的话可以再组后面通过<code>@&lt;number&gt;</code>的方式来自定义顺序，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;editor/context&quot;</span>: [</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;editorFocus&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// 强制放在navigation组的第2个</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation@2&quot;</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;editorFocus&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.getCurrentFilePath&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// 强制放在navigation组的第1个</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation@1&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-快捷键\"><a href=\"#3-快捷键\" class=\"headerlink\" title=\"3 快捷键\"></a>3 快捷键</h1><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;keybindings&quot;</span>: [&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 指定快捷键执行的操作</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// windows下快捷键</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;key&quot;</span>: <span class=\"string\">&quot;ctrl+f10&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// mac下快捷键</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;mac&quot;</span>: <span class=\"string\">&quot;cmd+f10&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// 快捷键何时生效</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;editorTextFocus&quot;</span></span><br><span class=\"line\">\t&#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://code.visualstudio.com/docs/getstarted/keybindings\">官方文档–快捷键绑定</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-命令\"><a href=\"#1-命令\" class=\"headerlink\" title=\"1 命令\"></a>1 命令</h1><p>注册命令</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// tension.ts</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> disposable = vscode.commands.registerCommand(<span class=\"string\">&#x27;extension.sayHello&#x27;</span>, <span class=\"function\">()=&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">context.subscriptions.push(disposable)</span><br></pre></td></tr></table></figure>\n\n<p>声明命令</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package.json</span></span><br><span class=\"line\"><span class=\"string\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Hello World&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>Note:  所有注册类API执行后都会返回一个disposable对象，必须放到<code>context.subscriptions</code>中去</p>\n<h2 id=\"1-1-回调函数参数\"><a href=\"#1-1-回调函数参数\" class=\"headerlink\" title=\"1.1 回调函数参数\"></a>1.1 回调函数参数</h2><p>可选参数-uri</p>\n<ul>\n<li>资源管理器： 选中的资源（文件/文件夹）路径</li>\n<li>文件编辑器： 文件路径</li>\n<li>快捷键： 空</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let disposable1 = vscode.commands.registerCommand(&#x27;extension.demo.getCurrentFilePath&#x27;, (uri) =&gt; &#123;</span><br><span class=\"line\">\tvscode.window.showInformationMessage(`current file/folder&#x27;s path is: $&#123;uri? uri.path : &#x27;empty&#x27;&#125;`);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">context.subscriptions.push(disposable1);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明命令</span></span><br><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;onCommand:extension.demo.getCurrentFilePath&quot;</span></span><br><span class=\"line\">],\t</span><br><span class=\"line\"><span class=\"comment\">// 命令的具体信息</span></span><br><span class=\"line\"><span class=\"string\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.getCurrentFilePath&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;get current file/folder path&quot;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"comment\">// 命令触发时机-- 编辑器获焦后邮件下拉框 &amp; 文件系统右键下拉框</span></span><br><span class=\"line\"><span class=\"string\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;editor/context&quot;</span>: [</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;eidtorFocus&quot;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.getCurrentFilePath&quot;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t],</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;explorer/context&quot;</span>: [</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.getCurrentFilePath&quot;</span>,</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t]</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-2-编辑器命令\"><a href=\"#1-2-编辑器命令\" class=\"headerlink\" title=\"1.2 编辑器命令\"></a>1.2 编辑器命令</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.commands.registerTextEditorCommand(<span class=\"string\">&#x27;commandId&#x27;</span>, <span class=\"function\">(<span class=\"params\">textEditor, edit</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// package.json</span></span><br><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">  <span class=\"string\">&quot;onCommand:extension.testEditorCommand&quot;</span></span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.testEditorCommand&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;TEST EDITOR COMMAND&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>– 按照上述没有看到该命令被激活？？？</p>\n<p>激活： 只有在编辑器被激活时调用才生效， 参数textEditor可以拿到活动编辑器</p>\n<h2 id=\"1-3-执行命令\"><a href=\"#1-3-执行命令\" class=\"headerlink\" title=\"1.3 执行命令\"></a>1.3 执行命令</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.commands.executeCommand(<span class=\"string\">&quot;命令&quot;</span>， params1, ...).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;<span class=\"comment\">// ...&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-4-获取所有命令\"><a href=\"#1-4-获取所有命令\" class=\"headerlink\" title=\"1.4 获取所有命令\"></a>1.4 获取所有命令</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.commands.getCommands().then(<span class=\"function\"><span class=\"params\">allCommands</span> =&gt;</span> &#123;<span class=\"comment\">//...&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-菜单\"><a href=\"#2-菜单\" class=\"headerlink\" title=\"2 菜单\"></a>2 菜单</h1><p>完整的菜单配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;editor/title&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;editorFocus&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;alt&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// editor/title是key值，定义这个菜单出现在哪里；</span></span><br><span class=\"line\"><span class=\"comment\">// when控制菜单何时出现；</span></span><br><span class=\"line\"><span class=\"comment\">// command定义菜单被点击后要执行什么操作；</span></span><br><span class=\"line\"><span class=\"comment\">// alt定义备用命令，按住alt键打开菜单时将执行对应命令；</span></span><br><span class=\"line\"><span class=\"comment\">// group定义菜单分组；</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-1-出现的位置\"><a href=\"#2-1-出现的位置\" class=\"headerlink\" title=\"2.1 出现的位置\"></a>2.1 出现的位置</h2><p>目前插件可以给以下场景配置自定义菜单</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">资源管理器上下文菜单 - explorer/context</span><br><span class=\"line\">编辑器上下文菜单 - editor/context</span><br><span class=\"line\">编辑标题菜单栏 - editor/title</span><br><span class=\"line\">编辑器标题上下文菜单 - editor/title/context</span><br><span class=\"line\">调试callstack视图上下文菜单 - debug/callstack/context</span><br><span class=\"line\">SCM标题菜单 -scm/title</span><br><span class=\"line\">SCM资源组菜单 -scm/resourceGroup/context</span><br><span class=\"line\">SCM资源菜单 -scm/resource/context</span><br><span class=\"line\">SCM更改标题菜单 -scm/change/title</span><br><span class=\"line\">左侧视图标题菜单 -view/title</span><br><span class=\"line\">视图项菜单 -view/item/context</span><br><span class=\"line\">控制命令是否显示在命令选项板中 - commandPalette</span><br></pre></td></tr></table></figure>\n\n<p>最常见的是<code>explorer/context</code>和<code>editor/context</code></p>\n<h2 id=\"2-2-when\"><a href=\"#2-2-when\" class=\"headerlink\" title=\"2.2 when\"></a>2.2 when</h2><p>通过when语句，vs code可以很好的控制什么时候显示菜单项</p>\n<p>when的常用语法</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resourceLangId == javascript：当编辑的文件是js文件时；</span><br><span class=\"line\">resourceFilename == test.js：当当前打开文件名是test.js时；</span><br><span class=\"line\">isLinux、isMac、isWindows：判断当前操作系统；</span><br><span class=\"line\">editorFocus：编辑器具有焦点时；</span><br><span class=\"line\">editorHasSelection：编辑器中有文本被选中时；</span><br><span class=\"line\">view == someViewId：当当前视图ID等于someViewId时；</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>多个条件可以通过与或非进行组合，例如：<code>editorFocus &amp;&amp; isWindows &amp;&amp; resourceLangId == javascript</code>。</p>\n<p><a href=\"https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts\">官方文档-when</a></p>\n<h2 id=\"2-3-alt\"><a href=\"#2-3-alt\" class=\"headerlink\" title=\"2.3 alt\"></a>2.3 alt</h2><p>表示没有按下alt键时，点击右键菜单执行的是<code>command</code>对应的命令，而按下了alt键后执行的是alt对应的命令</p>\n<h2 id=\"2-4-group\"><a href=\"#2-4-group\" class=\"headerlink\" title=\"2.4 group\"></a>2.4 group</h2><h3 id=\"2-4-1-组间排序\"><a href=\"#2-4-1-组间排序\" class=\"headerlink\" title=\"2.4.1 组间排序\"></a>2.4.1 组间排序</h3><p>控制菜单的分组和排序。不同的菜单拥有不同的默认分组。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">navigation- 放在这个组的永远排在最前面；</span><br><span class=\"line\"><span class=\"number\">1</span>_modification - 更改组；</span><br><span class=\"line\"><span class=\"number\">9</span>_cutcopypaste - 编辑组</span><br><span class=\"line\">z_commands - 最后一个默认组，其中包含用于打开命令选项板的条目。</span><br></pre></td></tr></table></figure>\n\n<p>除了<code>navigation</code>是强制放在最前面之外，其它分组都是按照0-9、a-z的顺序排列的</p>\n<p><code>explorer/context</code>有这些默认组：</p>\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">navigation - 放在这个组的永远排在最前面；</span><br><span class=\"line\"><span class=\"number\">2</span>_workspace - 与工作空间操作相关的命令。</span><br><span class=\"line\"><span class=\"number\">3</span>_compare - 与差异编辑器中的文件比较相关的命令。</span><br><span class=\"line\"><span class=\"number\">4</span>_search - 与在搜索视图中搜索相关的命令。</span><br><span class=\"line\"><span class=\"number\">5</span>_cutcopypaste - 与剪切，复制和粘贴文件相关的命令。</span><br><span class=\"line\"><span class=\"number\">7</span>_modification - 与修改文件相关的命令。</span><br></pre></td></tr></table></figure>\n\n<p>在<code>编辑器选项卡上下文菜单</code>有这些默认组：</p>\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>_close - 与关闭编辑器相关的命令。</span><br><span class=\"line\"><span class=\"number\">3</span>_preview - 与固定编辑器相关的命令。</span><br></pre></td></tr></table></figure>\n\n<p>在<code>editor/title</code>有这些默认组：</p>\n <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>_diff - 与使用差异编辑器相关的命令。</span><br><span class=\"line\"><span class=\"number\">3</span>_open - 与打开编辑器相关的命令。</span><br><span class=\"line\"><span class=\"number\">5</span>_close - 与关闭编辑器相关的命令</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-2-组内排序\"><a href=\"#2-4-2-组内排序\" class=\"headerlink\" title=\"2.4.2 组内排序\"></a>2.4.2 组内排序</h3><p>默认同一个组的顺序取决于菜单名称，如果想自定义排序的话可以再组后面通过<code>@&lt;number&gt;</code>的方式来自定义顺序，例如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;editor/context&quot;</span>: [</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;editorFocus&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// 强制放在navigation组的第2个</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation@2&quot;</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;editorFocus&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.demo.getCurrentFilePath&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// 强制放在navigation组的第1个</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation@1&quot;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-快捷键\"><a href=\"#3-快捷键\" class=\"headerlink\" title=\"3 快捷键\"></a>3 快捷键</h1><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;keybindings&quot;</span>: [&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 指定快捷键执行的操作</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;extension.sayHello&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// windows下快捷键</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;key&quot;</span>: <span class=\"string\">&quot;ctrl+f10&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// mac下快捷键</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;mac&quot;</span>: <span class=\"string\">&quot;cmd+f10&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"comment\">// 快捷键何时生效</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;editorTextFocus&quot;</span></span><br><span class=\"line\">\t&#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://code.visualstudio.com/docs/getstarted/keybindings\">官方文档–快捷键绑定</a></p>\n"},{"title":"vscode插件打包、发布、升级","date":"2022-01-21T04:05:49.000Z","_content":"\n# 1- 本地打包\n\n```bash\nnpm i vsce -g\n# 打包成vsix文件\nvsce package  \n```\n\n打包的时候需要设置repository，如果没有设置`repository`会有提示，所以最好设置一下。\n\n","source":"_posts/vscode插件打包、发布、升级.md","raw":"---\ntitle: vscode插件打包、发布、升级\ndate: 2022-01-21 12:05:49\ntags: vscode, extensions, publish, package\n---\n\n# 1- 本地打包\n\n```bash\nnpm i vsce -g\n# 打包成vsix文件\nvsce package  \n```\n\n打包的时候需要设置repository，如果没有设置`repository`会有提示，所以最好设置一下。\n\n","slug":"vscode插件打包、发布、升级","published":1,"updated":"2022-01-21T04:10:03.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckys47nb10005c9woho5bbb4e","content":"<h1 id=\"1-本地打包\"><a href=\"#1-本地打包\" class=\"headerlink\" title=\"1- 本地打包\"></a>1- 本地打包</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i vsce -g</span><br><span class=\"line\"><span class=\"comment\"># 打包成vsix文件</span></span><br><span class=\"line\">vsce package  </span><br></pre></td></tr></table></figure>\n\n<p>打包的时候需要设置repository，如果没有设置<code>repository</code>会有提示，所以最好设置一下。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-本地打包\"><a href=\"#1-本地打包\" class=\"headerlink\" title=\"1- 本地打包\"></a>1- 本地打包</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i vsce -g</span><br><span class=\"line\"><span class=\"comment\"># 打包成vsix文件</span></span><br><span class=\"line\">vsce package  </span><br></pre></td></tr></table></figure>\n\n<p>打包的时候需要设置repository，如果没有设置<code>repository</code>会有提示，所以最好设置一下。</p>\n"},{"title":"搭建个人博客-git and hexo","date":"2022-01-10T08:02:58.000Z","_content":"\n## Env Config\n\n- Git/node/hexo\n\ninstall hexo-cli globally\n\n```bash\nnpm install -g hexo-cli\n```\n\nhexo command\n\n```javascript\nnpm install hexo -g // install hexo globally\nnpm update hexo -g // update hexo verison\nhexo init // init blog\n// cmd abbreviation \nhexo n \"my blog\" == hexo new 'my blog' // create a new article\nhexo g == hexo generate\nhexo s == hexo server # start a server to preview, can hot update\nhexo d == hexo deploy\n// diff cmd for server\nhexo server // hot update\nhexo server -s // static server\nhexo server -p 5000 // update port \nhexo server -i [ip address] // custom server ip\nhexo clean # remove cache\n```\n\n## Progress\n\n- create a new git repository  name：[username].github.io\n- Create blog project by hexo\n\n```bash\nhexo init blog\n```\n\n- Create a new article and preview\n\n```bash\nhexo n \"new blog\"\nhexo g\nhexo s // open localhost:4000 in browser\n```\n\n- publish blog to git \n\n```blog/_config.yml : site config file```\n\n```blog/themes/_config.yml: theme config file```\n\nconnect blog and git repo: config cmd ```hexo d``` to let hexo know where you want deploy your blog\n\n```bash\nvim blog/_config.yml\n# modify last item deploy\ndeploy:\n  type: 'git'\n  repo: 'https://github.com/username/username.github.io.git'\n  branch: 'master'\n```\n\nInstall git deploy plugin\n\n```bash\nnpm i hexo-deployer-git -D\n```\n\nDeploy blog to git\n\n```bash\nhexo clean\nhexo g\nhexo d\n```\n\n- change theme\n  - you can choose a theme you like in site https://hexo.io/themes/\n  - follow the guide to use the theme\n  - below is a example for use theme next\n  - Download theme to blog/themes/[themename]\n  - Below is a sample for themes/hexo-theme-sky https://github.com/iJinxin/hexo-theme-sky\n\n```bash\ncd blog\ngit clone git@github.com:iJinxin/hexo-theme-sky.git themes/sky // download hexo-theme-sky to blog/themes/sky/\n```\n\n- change site config file: blog/ _config.yml\n\n```bash\ntheme: sky\n```\n\ninstall dependency\n\n```bash\nnpm install\nnpm install hexo-renderer-scss --save \n```\n\nNote: install hex-renderer-scss error\n\nError Reason: node-sass install error\n\nResolve: https://github.com/lmk123/blog/issues/28\n","source":"_posts/搭建个人博客-git-and-hexo.md","raw":"---\ntitle: 搭建个人博客-git and hexo\ndate: 2022-01-10 16:02:58\ntags: git, hexo\n---\n\n## Env Config\n\n- Git/node/hexo\n\ninstall hexo-cli globally\n\n```bash\nnpm install -g hexo-cli\n```\n\nhexo command\n\n```javascript\nnpm install hexo -g // install hexo globally\nnpm update hexo -g // update hexo verison\nhexo init // init blog\n// cmd abbreviation \nhexo n \"my blog\" == hexo new 'my blog' // create a new article\nhexo g == hexo generate\nhexo s == hexo server # start a server to preview, can hot update\nhexo d == hexo deploy\n// diff cmd for server\nhexo server // hot update\nhexo server -s // static server\nhexo server -p 5000 // update port \nhexo server -i [ip address] // custom server ip\nhexo clean # remove cache\n```\n\n## Progress\n\n- create a new git repository  name：[username].github.io\n- Create blog project by hexo\n\n```bash\nhexo init blog\n```\n\n- Create a new article and preview\n\n```bash\nhexo n \"new blog\"\nhexo g\nhexo s // open localhost:4000 in browser\n```\n\n- publish blog to git \n\n```blog/_config.yml : site config file```\n\n```blog/themes/_config.yml: theme config file```\n\nconnect blog and git repo: config cmd ```hexo d``` to let hexo know where you want deploy your blog\n\n```bash\nvim blog/_config.yml\n# modify last item deploy\ndeploy:\n  type: 'git'\n  repo: 'https://github.com/username/username.github.io.git'\n  branch: 'master'\n```\n\nInstall git deploy plugin\n\n```bash\nnpm i hexo-deployer-git -D\n```\n\nDeploy blog to git\n\n```bash\nhexo clean\nhexo g\nhexo d\n```\n\n- change theme\n  - you can choose a theme you like in site https://hexo.io/themes/\n  - follow the guide to use the theme\n  - below is a example for use theme next\n  - Download theme to blog/themes/[themename]\n  - Below is a sample for themes/hexo-theme-sky https://github.com/iJinxin/hexo-theme-sky\n\n```bash\ncd blog\ngit clone git@github.com:iJinxin/hexo-theme-sky.git themes/sky // download hexo-theme-sky to blog/themes/sky/\n```\n\n- change site config file: blog/ _config.yml\n\n```bash\ntheme: sky\n```\n\ninstall dependency\n\n```bash\nnpm install\nnpm install hexo-renderer-scss --save \n```\n\nNote: install hex-renderer-scss error\n\nError Reason: node-sass install error\n\nResolve: https://github.com/lmk123/blog/issues/28\n","slug":"搭建个人博客-git-and-hexo","published":1,"updated":"2022-01-10T08:05:13.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckys47nb20006c9wo3v5n75z6","content":"<h2 id=\"Env-Config\"><a href=\"#Env-Config\" class=\"headerlink\" title=\"Env Config\"></a>Env Config</h2><ul>\n<li>Git/node/hexo</li>\n</ul>\n<p>install hexo-cli globally</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>hexo command</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo -g <span class=\"comment\">// install hexo globally</span></span><br><span class=\"line\">npm update hexo -g <span class=\"comment\">// update hexo verison</span></span><br><span class=\"line\">hexo init <span class=\"comment\">// init blog</span></span><br><span class=\"line\"><span class=\"comment\">// cmd abbreviation </span></span><br><span class=\"line\">hexo n <span class=\"string\">&quot;my blog&quot;</span> == hexo <span class=\"keyword\">new</span> <span class=\"string\">&#x27;my blog&#x27;</span> <span class=\"comment\">// create a new article</span></span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server # start a server to preview, can hot update</span><br><span class=\"line\">hexo d == hexo deploy</span><br><span class=\"line\"><span class=\"comment\">// diff cmd for server</span></span><br><span class=\"line\">hexo server <span class=\"comment\">// hot update</span></span><br><span class=\"line\">hexo server -s <span class=\"comment\">// static server</span></span><br><span class=\"line\">hexo server -p <span class=\"number\">5000</span> <span class=\"comment\">// update port </span></span><br><span class=\"line\">hexo server -i [ip address] <span class=\"comment\">// custom server ip</span></span><br><span class=\"line\">hexo clean # remove cache</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Progress\"><a href=\"#Progress\" class=\"headerlink\" title=\"Progress\"></a>Progress</h2><ul>\n<li>create a new git repository  name：[username].github.io</li>\n<li>Create blog project by hexo</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Create a new article and preview</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n <span class=\"string\">&quot;new blog&quot;</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s // open localhost:4000 <span class=\"keyword\">in</span> browser</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>publish blog to git </li>\n</ul>\n<p><code>blog/_config.yml : site config file</code></p>\n<p><code>blog/themes/_config.yml: theme config file</code></p>\n<p>connect blog and git repo: config cmd <code>hexo d</code> to let hexo know where you want deploy your blog</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim blog/_config.yml</span><br><span class=\"line\"><span class=\"comment\"># modify last item deploy</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  repo: <span class=\"string\">&#x27;https://github.com/username/username.github.io.git&#x27;</span></span><br><span class=\"line\">  branch: <span class=\"string\">&#x27;master&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>Install git deploy plugin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-deployer-git -D</span><br></pre></td></tr></table></figure>\n\n<p>Deploy blog to git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>change theme<ul>\n<li>you can choose a theme you like in site <a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a></li>\n<li>follow the guide to use the theme</li>\n<li>below is a example for use theme next</li>\n<li>Download theme to blog/themes/[themename]</li>\n<li>Below is a sample for themes/hexo-theme-sky <a href=\"https://github.com/iJinxin/hexo-theme-sky\">https://github.com/iJinxin/hexo-theme-sky</a></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:iJinxin/hexo-theme-sky.git themes/sky // download hexo-theme-sky to blog/themes/sky/</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>change site config file: blog/ _config.yml</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: sky</span><br></pre></td></tr></table></figure>\n\n<p>install dependency</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-renderer-scss --save </span><br></pre></td></tr></table></figure>\n\n<p>Note: install hex-renderer-scss error</p>\n<p>Error Reason: node-sass install error</p>\n<p>Resolve: <a href=\"https://github.com/lmk123/blog/issues/28\">https://github.com/lmk123/blog/issues/28</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Env-Config\"><a href=\"#Env-Config\" class=\"headerlink\" title=\"Env Config\"></a>Env Config</h2><ul>\n<li>Git/node/hexo</li>\n</ul>\n<p>install hexo-cli globally</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>hexo command</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo -g <span class=\"comment\">// install hexo globally</span></span><br><span class=\"line\">npm update hexo -g <span class=\"comment\">// update hexo verison</span></span><br><span class=\"line\">hexo init <span class=\"comment\">// init blog</span></span><br><span class=\"line\"><span class=\"comment\">// cmd abbreviation </span></span><br><span class=\"line\">hexo n <span class=\"string\">&quot;my blog&quot;</span> == hexo <span class=\"keyword\">new</span> <span class=\"string\">&#x27;my blog&#x27;</span> <span class=\"comment\">// create a new article</span></span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server # start a server to preview, can hot update</span><br><span class=\"line\">hexo d == hexo deploy</span><br><span class=\"line\"><span class=\"comment\">// diff cmd for server</span></span><br><span class=\"line\">hexo server <span class=\"comment\">// hot update</span></span><br><span class=\"line\">hexo server -s <span class=\"comment\">// static server</span></span><br><span class=\"line\">hexo server -p <span class=\"number\">5000</span> <span class=\"comment\">// update port </span></span><br><span class=\"line\">hexo server -i [ip address] <span class=\"comment\">// custom server ip</span></span><br><span class=\"line\">hexo clean # remove cache</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Progress\"><a href=\"#Progress\" class=\"headerlink\" title=\"Progress\"></a>Progress</h2><ul>\n<li>create a new git repository  name：[username].github.io</li>\n<li>Create blog project by hexo</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Create a new article and preview</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n <span class=\"string\">&quot;new blog&quot;</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s // open localhost:4000 <span class=\"keyword\">in</span> browser</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>publish blog to git </li>\n</ul>\n<p><code>blog/_config.yml : site config file</code></p>\n<p><code>blog/themes/_config.yml: theme config file</code></p>\n<p>connect blog and git repo: config cmd <code>hexo d</code> to let hexo know where you want deploy your blog</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim blog/_config.yml</span><br><span class=\"line\"><span class=\"comment\"># modify last item deploy</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  repo: <span class=\"string\">&#x27;https://github.com/username/username.github.io.git&#x27;</span></span><br><span class=\"line\">  branch: <span class=\"string\">&#x27;master&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>Install git deploy plugin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-deployer-git -D</span><br></pre></td></tr></table></figure>\n\n<p>Deploy blog to git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>change theme<ul>\n<li>you can choose a theme you like in site <a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a></li>\n<li>follow the guide to use the theme</li>\n<li>below is a example for use theme next</li>\n<li>Download theme to blog/themes/[themename]</li>\n<li>Below is a sample for themes/hexo-theme-sky <a href=\"https://github.com/iJinxin/hexo-theme-sky\">https://github.com/iJinxin/hexo-theme-sky</a></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:iJinxin/hexo-theme-sky.git themes/sky // download hexo-theme-sky to blog/themes/sky/</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>change site config file: blog/ _config.yml</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: sky</span><br></pre></td></tr></table></figure>\n\n<p>install dependency</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-renderer-scss --save </span><br></pre></td></tr></table></figure>\n\n<p>Note: install hex-renderer-scss error</p>\n<p>Error Reason: node-sass install error</p>\n<p>Resolve: <a href=\"https://github.com/lmk123/blog/issues/28\">https://github.com/lmk123/blog/issues/28</a></p>\n"},{"title":"class extends and implements 的区别","date":"2022-03-10T02:59:41.000Z","_content":"\n## 定义\n\nextends: es6中的关键字，是继承的意思，一般子类继承父类，可以复用父类的属性和方法\n\nimplements: 可以理解成当前定义的类通过关键字implements声明自己使用一个或者多个接口。 接口可以是一个或多个\n\n## 使用\n\n```react\nclass Parent {\n    sayHi(): string {\n        return `sayHi to you!`\n    }\n}\n\nclass Child extends Parent {\n    \n}\n\nclass Child1 implements Parent {\n    sayHi(): string { // 在parent中定义的属性和方法， child1必须有\n        return '1'\n    }\n    \n}\n```\n\nextends 是继承某个类, 继承之后可以使用父类的方法, 也可以重写父类的方法;\nimplements 是实现多个接口, 接口的方法一般为空的, 必须重写才能使用.\n\n## 区别\n\nextends 是继承父类，只要那个类不是声明为final或者那个类定义为abstract的就能继承，\n继承只能继承一个类，但implements可以实现多个接口，用逗号分开就行了\n\n```react\nclass A extend B implements C,D,E {\n\n}\n```\n\nextends可以覆盖父类的属性和方法； implements，实现父类，子类不可以覆盖父类的方法或者变量。即使子类定义与父类相同的变量或者函数，也会被父类取代掉。\n\n## 接口实现的注意点\n\na.实现一个接口就是要实现该接口的所有的方法(抽象类除外)\n\nb.接口中的方法都是抽象的。  \n\nc.多个无关的类可以实现同一个接口，一个类可以实现多个无关的接口。\n\n## 总结\n\n需要实现，不可以修改implements\n定义接口需要具体实现，或者可以被修改扩展性好，用extends\n","source":"_posts/class-extends-and-implements-的区别.md","raw":"---\ntitle: class extends and implements 的区别\ndate: 2022-03-10 10:59:41\ntags: class, extends and implements\n---\n\n## 定义\n\nextends: es6中的关键字，是继承的意思，一般子类继承父类，可以复用父类的属性和方法\n\nimplements: 可以理解成当前定义的类通过关键字implements声明自己使用一个或者多个接口。 接口可以是一个或多个\n\n## 使用\n\n```react\nclass Parent {\n    sayHi(): string {\n        return `sayHi to you!`\n    }\n}\n\nclass Child extends Parent {\n    \n}\n\nclass Child1 implements Parent {\n    sayHi(): string { // 在parent中定义的属性和方法， child1必须有\n        return '1'\n    }\n    \n}\n```\n\nextends 是继承某个类, 继承之后可以使用父类的方法, 也可以重写父类的方法;\nimplements 是实现多个接口, 接口的方法一般为空的, 必须重写才能使用.\n\n## 区别\n\nextends 是继承父类，只要那个类不是声明为final或者那个类定义为abstract的就能继承，\n继承只能继承一个类，但implements可以实现多个接口，用逗号分开就行了\n\n```react\nclass A extend B implements C,D,E {\n\n}\n```\n\nextends可以覆盖父类的属性和方法； implements，实现父类，子类不可以覆盖父类的方法或者变量。即使子类定义与父类相同的变量或者函数，也会被父类取代掉。\n\n## 接口实现的注意点\n\na.实现一个接口就是要实现该接口的所有的方法(抽象类除外)\n\nb.接口中的方法都是抽象的。  \n\nc.多个无关的类可以实现同一个接口，一个类可以实现多个无关的接口。\n\n## 总结\n\n需要实现，不可以修改implements\n定义接口需要具体实现，或者可以被修改扩展性好，用extends\n","slug":"class-extends-and-implements-的区别","published":1,"updated":"2022-03-10T03:25:02.420Z","_id":"cl0kfdngl00007twp0th85jem","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>extends: es6中的关键字，是继承的意思，一般子类继承父类，可以复用父类的属性和方法</p>\n<p>implements: 可以理解成当前定义的类通过关键字implements声明自己使用一个或者多个接口。 接口可以是一个或多个</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Parent &#123;</span><br><span class=\"line\">    sayHi(): string &#123;</span><br><span class=\"line\">        return `sayHi to you!`</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Child extends Parent &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Child1 implements Parent &#123;</span><br><span class=\"line\">    sayHi(): string &#123; // 在parent中定义的属性和方法， child1必须有</span><br><span class=\"line\">        return &#x27;1&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>extends 是继承某个类, 继承之后可以使用父类的方法, 也可以重写父类的方法;<br>implements 是实现多个接口, 接口的方法一般为空的, 必须重写才能使用.</p>\n<h2 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h2><p>extends 是继承父类，只要那个类不是声明为final或者那个类定义为abstract的就能继承，<br>继承只能继承一个类，但implements可以实现多个接口，用逗号分开就行了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class A extend B implements C,D,E &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>extends可以覆盖父类的属性和方法； implements，实现父类，子类不可以覆盖父类的方法或者变量。即使子类定义与父类相同的变量或者函数，也会被父类取代掉。</p>\n<h2 id=\"接口实现的注意点\"><a href=\"#接口实现的注意点\" class=\"headerlink\" title=\"接口实现的注意点\"></a>接口实现的注意点</h2><p>a.实现一个接口就是要实现该接口的所有的方法(抽象类除外)</p>\n<p>b.接口中的方法都是抽象的。  </p>\n<p>c.多个无关的类可以实现同一个接口，一个类可以实现多个无关的接口。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>需要实现，不可以修改implements<br>定义接口需要具体实现，或者可以被修改扩展性好，用extends</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>extends: es6中的关键字，是继承的意思，一般子类继承父类，可以复用父类的属性和方法</p>\n<p>implements: 可以理解成当前定义的类通过关键字implements声明自己使用一个或者多个接口。 接口可以是一个或多个</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Parent &#123;</span><br><span class=\"line\">    sayHi(): string &#123;</span><br><span class=\"line\">        return `sayHi to you!`</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Child extends Parent &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Child1 implements Parent &#123;</span><br><span class=\"line\">    sayHi(): string &#123; // 在parent中定义的属性和方法， child1必须有</span><br><span class=\"line\">        return &#x27;1&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>extends 是继承某个类, 继承之后可以使用父类的方法, 也可以重写父类的方法;<br>implements 是实现多个接口, 接口的方法一般为空的, 必须重写才能使用.</p>\n<h2 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h2><p>extends 是继承父类，只要那个类不是声明为final或者那个类定义为abstract的就能继承，<br>继承只能继承一个类，但implements可以实现多个接口，用逗号分开就行了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class A extend B implements C,D,E &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>extends可以覆盖父类的属性和方法； implements，实现父类，子类不可以覆盖父类的方法或者变量。即使子类定义与父类相同的变量或者函数，也会被父类取代掉。</p>\n<h2 id=\"接口实现的注意点\"><a href=\"#接口实现的注意点\" class=\"headerlink\" title=\"接口实现的注意点\"></a>接口实现的注意点</h2><p>a.实现一个接口就是要实现该接口的所有的方法(抽象类除外)</p>\n<p>b.接口中的方法都是抽象的。  </p>\n<p>c.多个无关的类可以实现同一个接口，一个类可以实现多个无关的接口。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>需要实现，不可以修改implements<br>定义接口需要具体实现，或者可以被修改扩展性好，用extends</p>\n"},{"title":"vs-extension: tree-view","date":"2022-03-10T02:20:13.000Z","_content":"\n## 新增custrom view containers\n\n### 1- 在package.json内部添加 contributes.views\n\n```json\n\"contributes\": {\n    \"views\": { // the view showed in sideBar\n        \"custom-view\": [\n            {\n              \"id\": \"customViewId\",\n              \"name\": \"view title show \",\n              \"icon\": \"media/transfer.svg\",\n              \"contextualTitle\": \"custom view\"\n            }\n        ]\n    },\n    \"viewsContainers\": { // when the view show\n        \"activitybar\": [\n            {\n                \"id\": \"containerId\",\n                \"title\": \"hover msg\",\n                \"icon\": \"img url\"\n            }\n        ]\n    }\n\n}\n```\n\n添加好上面的配置， 启动插件， 就会在active bar 看到一个图标，点击后会在sideBar看到配置的view\n现在还是空白的。\n\n### 2- 给view提供数据: create a TreeDataProvider\n\n一定会使用到的apis\n\n1- ```getChildren(element?: T): ProviderResult<T[]>```: 获取指定element/root的子元素\n\n2- ```getTreeItem(element: T): TreeItem | Thenable<TreeItem>```: 获取在视图中显示的元素的 UI（TreeItem)\n\n```react\nexport default CustomViewProvider implements vscode.ThreeDataProvider<TreeData> {\n    constructor(private workspaceRoot: string) {}\n\n    getTreeItem(element: TreeData): vscode.TreeItem {\n        // 获取展示数据的容器\n        return element;\n    }\n\n    getChildren(element: TreeData) Thenable<TreeData[]>  {\n        // 获取展示数据\n    }\n}\n\nclass TreeData extends vscode.TreeItem {\n    constructor(\n        public readonly collapsibleState: vscode.TreeItemCollapsibleState\n    ) {\n        super(collapsibleState);\n    }\n}\n\n````\n\n### 3- Registering the TreeDataProvider to your view\n\n有两种方法可以实现：\n\n1- ```vscode.window.registerThreeDataProvider```: 通过viewId 和上面的TreeDataProvider来注册\n\nRegister the tree data provider by providing the registered view ID and above data provider.\n\n```react\nconst rootPath = vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 0 &&\n  vscode.workspace.workspaceFolders[0].uri.fsPath : undefined\n\nvscode.window.registerThreeDataProvider(\n    \"customViewId\",\n    new CustomViewProvider(rootPath)\n)\n\n```\n\n2- ```vscode.window.createTreeView```:根据 viewId and data provider创建treeView\n\nCreate the Tree View by providing the registered view ID and above data provider.\nThis will give access to the TreeView, which you can use for performing other view operations. \nUse createTreeView, if you need the TreeView API.\n\n```react\nvscode.window.createTreeView('customViewId', {\n    treeDataProvider: new CustomViewProvider(rootPath)\n})\n```\n\n### 更新Tree view content(refresh)\n\nuse ```onDidChangeTreeData``` event\n\n```onDidChangeTreeData?: Event<T | undefined | null | void>```\n\nImplement this if your tree data can change and you want to update the treeview.\n\nAdd the following to your CustomViewProvider.\n\n```react\n  private _onDidChangeTreeData: vscode.EventEmitter<Dependency | undefined | null | void> = new vscode.EventEmitter<Dependency | undefined | null | void>();\n  readonly onDidChangeTreeData: vscode.Event<Dependency | undefined | null | void> = this._onDidChangeTreeData.event;\n\n  refresh(): void {\n    this._onDidChangeTreeData.fire();\n  }\n```\n\nWe can add a command to call refresh.\n\nIn the contributes section of your package.json, add:\n\n```json\n    \"commands\": [\n            {\n                \"command\": \"customView.refreshEntry\",\n                \"title\": \"Refresh\",\n                \"icon\": {\n                    \"light\": \"resources/light/refresh.svg\",\n                    \"dark\": \"resources/dark/refresh.svg\"\n                }\n            },\n    ]\n```\n\n## 注册插件\n\n```react\nimport * as vscode from 'vscode';\nimport { CustomViewProvider } from './customViewProvider';\n\nexport function activate(context: vscode.ExtensionContext) {\n  const rootPath =\n    vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 0\n      ? vscode.workspace.workspaceFolders[0].uri.fsPath\n      : undefined;\n  const customViewProvider = new CustomViewProvider(rootPath);\n  vscode.window.registerTreeDataProvider('customViewId', customViewProvider);\n  vscode.commands.registerCommand('customView.refreshEntry', () =>\n    customViewProvider.refresh()\n  );\n}\n```\n\n### refresh 通过按钮来触发: 在contributions里增加下面配置\n\n```json\n\"menus\": {\n    \"view/title\": [\n        {\n            \"command\": \"customView.refreshEntry\",\n            \"when\": \"view == customViewId\",\n            \"group\": \"navigation\"\n        },\n    ]\n}\n```\n\n## 激活插件: 在package.json注册激活事件\n\n```json\n\"activationEvents\": [\n        \"onView:customViewId\",\n],\n```\n\n## View Container\n\nview Container包含两部分： 活动栏或面板中显示的视图列表以及内置的视图容器\n内置视图容器的示例是源代码管理和资源管理器。\n\n### register View Container in contributes.viewsContainers\n\n```json\n\"contributes\": {\n  \"viewsContainers\": {\n    \"activitybar\": [\n      {\n        \"id\": \"package-explorer\", // The name of the new view container you're creating.\n        \"title\": \"Package Explorer\", // The name that will show up at the top of the view container.\n        \"icon\": \"media/dep.svg\" //  An image that will be displayed for the view container when in the Activity Bar.\n      }\n    ]\n  }\n}\n```\n\n你也可以注册到panel下\n\n```json\n\"contributes\": {\n  \"viewsContainers\": {\n    \"panel\": [\n      {\n        \"id\": \"package-explorer\",\n        \"title\": \"Package Explorer\",\n        \"icon\": \"media/dep.svg\"\n      }\n    ]\n  }\n}\n```\n\n### Contributing views to View Containers\n\n可以把view挂载到view Containers\n\n```json\n\"contributes\": {\n  \"views\": {\n    \"package-explorer\": [ // key是view container id\n      {\n        \"id\": \"nodeDependencies\",\n        \"name\": \"Node Dependencies\",\n        \"icon\": \"media/dep.svg\",\n        \"contextualTitle\": \"Package Explorer\"\n      }\n    ]\n  }\n}\n```\n\n可以设置view的可见性：```visibility: visible/collapsed/ hidden;``` 仅在第一次使用此视图打开工作区时，VS Code 才会尊重此属性\n\n## View Actions: 视图交互\n\n通过在package.json中添加contributions\n可以添加交互的位置，共三个：\n\n1- ```view/title```: 主要操作添加配置```\"group\": \"navigation\"```, 次要操作在```...```内\n2- ```view/item/context```:  \nLocation to show actions for the tree item. Inline actions use \"group\": \"inline\" and rest are secondary actions, which are in ... menu.\n\n![vscode-action](\"../../public/css/images/vscode-view-action.png\")\n\n```json\n\"contributes\": {\n  \"commands\": [\n    {\n      \"command\": \"nodeDependencies.refreshEntry\",\n      \"title\": \"Refresh\",\n      \"icon\": {\n        \"light\": \"resources/light/refresh.svg\",\n        \"dark\": \"resources/dark/refresh.svg\"\n      }\n    },\n    {\n      \"command\": \"nodeDependencies.addEntry\",\n      \"title\": \"Add\"\n    },\n    {\n      \"command\": \"nodeDependencies.editEntry\",\n      \"title\": \"Edit\",\n      \"icon\": {\n        \"light\": \"resources/light/edit.svg\",\n        \"dark\": \"resources/dark/edit.svg\"\n      }\n    },\n    {\n      \"command\": \"nodeDependencies.deleteEntry\",\n      \"title\": \"Delete\"\n    }\n  ],\n  \"menus\": {\n    \"view/title\": [\n      {\n        \"command\": \"nodeDependencies.refreshEntry\",\n        \"when\": \"view == nodeDependencies\",\n        \"group\": \"navigation\"\n      },\n      {\n        \"command\": \"nodeDependencies.addEntry\",\n        \"when\": \"view == nodeDependencies\"\n      }\n    ],\n    \"view/item/context\": [\n      {\n        \"command\": \"nodeDependencies.editEntry\",\n        \"when\": \"view == nodeDependencies && viewItem == dependency\",\n        \"group\": \"inline\"\n      },\n      {\n        \"command\": \"nodeDependencies.deleteEntry\",\n        \"when\": \"view == nodeDependencies && viewItem == dependency\"\n      }\n    ]\n  }\n}\n```\n\n","source":"_posts/vs-extension-tree-view.md","raw":"---\ntitle: 'vs-extension: tree-view'\ndate: 2022-03-10 10:20:13\ntags: vs-extension\n---\n\n## 新增custrom view containers\n\n### 1- 在package.json内部添加 contributes.views\n\n```json\n\"contributes\": {\n    \"views\": { // the view showed in sideBar\n        \"custom-view\": [\n            {\n              \"id\": \"customViewId\",\n              \"name\": \"view title show \",\n              \"icon\": \"media/transfer.svg\",\n              \"contextualTitle\": \"custom view\"\n            }\n        ]\n    },\n    \"viewsContainers\": { // when the view show\n        \"activitybar\": [\n            {\n                \"id\": \"containerId\",\n                \"title\": \"hover msg\",\n                \"icon\": \"img url\"\n            }\n        ]\n    }\n\n}\n```\n\n添加好上面的配置， 启动插件， 就会在active bar 看到一个图标，点击后会在sideBar看到配置的view\n现在还是空白的。\n\n### 2- 给view提供数据: create a TreeDataProvider\n\n一定会使用到的apis\n\n1- ```getChildren(element?: T): ProviderResult<T[]>```: 获取指定element/root的子元素\n\n2- ```getTreeItem(element: T): TreeItem | Thenable<TreeItem>```: 获取在视图中显示的元素的 UI（TreeItem)\n\n```react\nexport default CustomViewProvider implements vscode.ThreeDataProvider<TreeData> {\n    constructor(private workspaceRoot: string) {}\n\n    getTreeItem(element: TreeData): vscode.TreeItem {\n        // 获取展示数据的容器\n        return element;\n    }\n\n    getChildren(element: TreeData) Thenable<TreeData[]>  {\n        // 获取展示数据\n    }\n}\n\nclass TreeData extends vscode.TreeItem {\n    constructor(\n        public readonly collapsibleState: vscode.TreeItemCollapsibleState\n    ) {\n        super(collapsibleState);\n    }\n}\n\n````\n\n### 3- Registering the TreeDataProvider to your view\n\n有两种方法可以实现：\n\n1- ```vscode.window.registerThreeDataProvider```: 通过viewId 和上面的TreeDataProvider来注册\n\nRegister the tree data provider by providing the registered view ID and above data provider.\n\n```react\nconst rootPath = vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 0 &&\n  vscode.workspace.workspaceFolders[0].uri.fsPath : undefined\n\nvscode.window.registerThreeDataProvider(\n    \"customViewId\",\n    new CustomViewProvider(rootPath)\n)\n\n```\n\n2- ```vscode.window.createTreeView```:根据 viewId and data provider创建treeView\n\nCreate the Tree View by providing the registered view ID and above data provider.\nThis will give access to the TreeView, which you can use for performing other view operations. \nUse createTreeView, if you need the TreeView API.\n\n```react\nvscode.window.createTreeView('customViewId', {\n    treeDataProvider: new CustomViewProvider(rootPath)\n})\n```\n\n### 更新Tree view content(refresh)\n\nuse ```onDidChangeTreeData``` event\n\n```onDidChangeTreeData?: Event<T | undefined | null | void>```\n\nImplement this if your tree data can change and you want to update the treeview.\n\nAdd the following to your CustomViewProvider.\n\n```react\n  private _onDidChangeTreeData: vscode.EventEmitter<Dependency | undefined | null | void> = new vscode.EventEmitter<Dependency | undefined | null | void>();\n  readonly onDidChangeTreeData: vscode.Event<Dependency | undefined | null | void> = this._onDidChangeTreeData.event;\n\n  refresh(): void {\n    this._onDidChangeTreeData.fire();\n  }\n```\n\nWe can add a command to call refresh.\n\nIn the contributes section of your package.json, add:\n\n```json\n    \"commands\": [\n            {\n                \"command\": \"customView.refreshEntry\",\n                \"title\": \"Refresh\",\n                \"icon\": {\n                    \"light\": \"resources/light/refresh.svg\",\n                    \"dark\": \"resources/dark/refresh.svg\"\n                }\n            },\n    ]\n```\n\n## 注册插件\n\n```react\nimport * as vscode from 'vscode';\nimport { CustomViewProvider } from './customViewProvider';\n\nexport function activate(context: vscode.ExtensionContext) {\n  const rootPath =\n    vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 0\n      ? vscode.workspace.workspaceFolders[0].uri.fsPath\n      : undefined;\n  const customViewProvider = new CustomViewProvider(rootPath);\n  vscode.window.registerTreeDataProvider('customViewId', customViewProvider);\n  vscode.commands.registerCommand('customView.refreshEntry', () =>\n    customViewProvider.refresh()\n  );\n}\n```\n\n### refresh 通过按钮来触发: 在contributions里增加下面配置\n\n```json\n\"menus\": {\n    \"view/title\": [\n        {\n            \"command\": \"customView.refreshEntry\",\n            \"when\": \"view == customViewId\",\n            \"group\": \"navigation\"\n        },\n    ]\n}\n```\n\n## 激活插件: 在package.json注册激活事件\n\n```json\n\"activationEvents\": [\n        \"onView:customViewId\",\n],\n```\n\n## View Container\n\nview Container包含两部分： 活动栏或面板中显示的视图列表以及内置的视图容器\n内置视图容器的示例是源代码管理和资源管理器。\n\n### register View Container in contributes.viewsContainers\n\n```json\n\"contributes\": {\n  \"viewsContainers\": {\n    \"activitybar\": [\n      {\n        \"id\": \"package-explorer\", // The name of the new view container you're creating.\n        \"title\": \"Package Explorer\", // The name that will show up at the top of the view container.\n        \"icon\": \"media/dep.svg\" //  An image that will be displayed for the view container when in the Activity Bar.\n      }\n    ]\n  }\n}\n```\n\n你也可以注册到panel下\n\n```json\n\"contributes\": {\n  \"viewsContainers\": {\n    \"panel\": [\n      {\n        \"id\": \"package-explorer\",\n        \"title\": \"Package Explorer\",\n        \"icon\": \"media/dep.svg\"\n      }\n    ]\n  }\n}\n```\n\n### Contributing views to View Containers\n\n可以把view挂载到view Containers\n\n```json\n\"contributes\": {\n  \"views\": {\n    \"package-explorer\": [ // key是view container id\n      {\n        \"id\": \"nodeDependencies\",\n        \"name\": \"Node Dependencies\",\n        \"icon\": \"media/dep.svg\",\n        \"contextualTitle\": \"Package Explorer\"\n      }\n    ]\n  }\n}\n```\n\n可以设置view的可见性：```visibility: visible/collapsed/ hidden;``` 仅在第一次使用此视图打开工作区时，VS Code 才会尊重此属性\n\n## View Actions: 视图交互\n\n通过在package.json中添加contributions\n可以添加交互的位置，共三个：\n\n1- ```view/title```: 主要操作添加配置```\"group\": \"navigation\"```, 次要操作在```...```内\n2- ```view/item/context```:  \nLocation to show actions for the tree item. Inline actions use \"group\": \"inline\" and rest are secondary actions, which are in ... menu.\n\n![vscode-action](\"../../public/css/images/vscode-view-action.png\")\n\n```json\n\"contributes\": {\n  \"commands\": [\n    {\n      \"command\": \"nodeDependencies.refreshEntry\",\n      \"title\": \"Refresh\",\n      \"icon\": {\n        \"light\": \"resources/light/refresh.svg\",\n        \"dark\": \"resources/dark/refresh.svg\"\n      }\n    },\n    {\n      \"command\": \"nodeDependencies.addEntry\",\n      \"title\": \"Add\"\n    },\n    {\n      \"command\": \"nodeDependencies.editEntry\",\n      \"title\": \"Edit\",\n      \"icon\": {\n        \"light\": \"resources/light/edit.svg\",\n        \"dark\": \"resources/dark/edit.svg\"\n      }\n    },\n    {\n      \"command\": \"nodeDependencies.deleteEntry\",\n      \"title\": \"Delete\"\n    }\n  ],\n  \"menus\": {\n    \"view/title\": [\n      {\n        \"command\": \"nodeDependencies.refreshEntry\",\n        \"when\": \"view == nodeDependencies\",\n        \"group\": \"navigation\"\n      },\n      {\n        \"command\": \"nodeDependencies.addEntry\",\n        \"when\": \"view == nodeDependencies\"\n      }\n    ],\n    \"view/item/context\": [\n      {\n        \"command\": \"nodeDependencies.editEntry\",\n        \"when\": \"view == nodeDependencies && viewItem == dependency\",\n        \"group\": \"inline\"\n      },\n      {\n        \"command\": \"nodeDependencies.deleteEntry\",\n        \"when\": \"view == nodeDependencies && viewItem == dependency\"\n      }\n    ]\n  }\n}\n```\n\n","slug":"vs-extension-tree-view","published":1,"updated":"2022-03-23T03:38:56.253Z","_id":"cl0kfdngn00017twp6dlr8vnq","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"新增custrom-view-containers\"><a href=\"#新增custrom-view-containers\" class=\"headerlink\" title=\"新增custrom view containers\"></a>新增custrom view containers</h2><h3 id=\"1-在package-json内部添加-contributes-views\"><a href=\"#1-在package-json内部添加-contributes-views\" class=\"headerlink\" title=\"1- 在package.json内部添加 contributes.views\"></a>1- 在package.json内部添加 contributes.views</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;views&quot;</span>: &#123; <span class=\"comment\">// the view showed in sideBar</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;custom-view&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;customViewId&quot;</span>,</span><br><span class=\"line\">              <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;view title show &quot;</span>,</span><br><span class=\"line\">              <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;media/transfer.svg&quot;</span>,</span><br><span class=\"line\">              <span class=\"attr\">&quot;contextualTitle&quot;</span>: <span class=\"string\">&quot;custom view&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">&quot;viewsContainers&quot;</span>: &#123; <span class=\"comment\">// when the view show</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;activitybar&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;containerId&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;hover msg&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;img url&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>添加好上面的配置， 启动插件， 就会在active bar 看到一个图标，点击后会在sideBar看到配置的view<br>现在还是空白的。</p>\n<h3 id=\"2-给view提供数据-create-a-TreeDataProvider\"><a href=\"#2-给view提供数据-create-a-TreeDataProvider\" class=\"headerlink\" title=\"2- 给view提供数据: create a TreeDataProvider\"></a>2- 给view提供数据: create a TreeDataProvider</h3><p>一定会使用到的apis</p>\n<p>1- <code>getChildren(element?: T): ProviderResult&lt;T[]&gt;</code>: 获取指定element/root的子元素</p>\n<p>2- <code>getTreeItem(element: T): TreeItem | Thenable&lt;TreeItem&gt;</code>: 获取在视图中显示的元素的 UI（TreeItem)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default CustomViewProvider implements vscode.ThreeDataProvider&lt;TreeData&gt; &#123;</span><br><span class=\"line\">    constructor(private workspaceRoot: string) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    getTreeItem(element: TreeData): vscode.TreeItem &#123;</span><br><span class=\"line\">        // 获取展示数据的容器</span><br><span class=\"line\">        return element;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    getChildren(element: TreeData) Thenable&lt;TreeData[]&gt;  &#123;</span><br><span class=\"line\">        // 获取展示数据</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TreeData extends vscode.TreeItem &#123;</span><br><span class=\"line\">    constructor(</span><br><span class=\"line\">        public readonly collapsibleState: vscode.TreeItemCollapsibleState</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">        super(collapsibleState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">````</span><br><span class=\"line\"></span><br><span class=\"line\">### 3- Registering the TreeDataProvider to your view</span><br><span class=\"line\"></span><br><span class=\"line\">有两种方法可以实现：</span><br><span class=\"line\"></span><br><span class=\"line\">1- ```vscode.window.registerThreeDataProvider```: 通过viewId 和上面的TreeDataProvider来注册</span><br><span class=\"line\"></span><br><span class=\"line\">Register the tree data provider by providing the registered view ID and above data provider.</span><br><span class=\"line\"></span><br><span class=\"line\">```react</span><br><span class=\"line\">const rootPath = vscode.workspace.workspaceFolders &amp;&amp; vscode.workspace.workspaceFolders.length &gt; 0 &amp;&amp;</span><br><span class=\"line\">  vscode.workspace.workspaceFolders[0].uri.fsPath : undefined</span><br><span class=\"line\"></span><br><span class=\"line\">vscode.window.registerThreeDataProvider(</span><br><span class=\"line\">    &quot;customViewId&quot;,</span><br><span class=\"line\">    new CustomViewProvider(rootPath)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>2- <code>vscode.window.createTreeView</code>:根据 viewId and data provider创建treeView</p>\n<p>Create the Tree View by providing the registered view ID and above data provider.<br>This will give access to the TreeView, which you can use for performing other view operations.<br>Use createTreeView, if you need the TreeView API.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.window.createTreeView(&#x27;customViewId&#x27;, &#123;</span><br><span class=\"line\">    treeDataProvider: new CustomViewProvider(rootPath)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"更新Tree-view-content-refresh\"><a href=\"#更新Tree-view-content-refresh\" class=\"headerlink\" title=\"更新Tree view content(refresh)\"></a>更新Tree view content(refresh)</h3><p>use <code>onDidChangeTreeData</code> event</p>\n<p><code>onDidChangeTreeData?: Event&lt;T | undefined | null | void&gt;</code></p>\n<p>Implement this if your tree data can change and you want to update the treeview.</p>\n<p>Add the following to your CustomViewProvider.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private _onDidChangeTreeData: vscode.EventEmitter&lt;Dependency | undefined | null | void&gt; = new vscode.EventEmitter&lt;Dependency | undefined | null | void&gt;();</span><br><span class=\"line\">readonly onDidChangeTreeData: vscode.Event&lt;Dependency | undefined | null | void&gt; = this._onDidChangeTreeData.event;</span><br><span class=\"line\"></span><br><span class=\"line\">refresh(): void &#123;</span><br><span class=\"line\">  this._onDidChangeTreeData.fire();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>We can add a command to call refresh.</p>\n<p>In the contributes section of your package.json, add:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;customView.refreshEntry&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Refresh&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;icon&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;light&quot;</span>: <span class=\"string\">&quot;resources/light/refresh.svg&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dark&quot;</span>: <span class=\"string\">&quot;resources/dark/refresh.svg&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注册插件\"><a href=\"#注册插件\" class=\"headerlink\" title=\"注册插件\"></a>注册插件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import * as vscode from &#x27;vscode&#x27;;</span><br><span class=\"line\">import &#123; CustomViewProvider &#125; from &#x27;./customViewProvider&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">export function activate(context: vscode.ExtensionContext) &#123;</span><br><span class=\"line\">  const rootPath =</span><br><span class=\"line\">    vscode.workspace.workspaceFolders &amp;&amp; vscode.workspace.workspaceFolders.length &gt; 0</span><br><span class=\"line\">      ? vscode.workspace.workspaceFolders[0].uri.fsPath</span><br><span class=\"line\">      : undefined;</span><br><span class=\"line\">  const customViewProvider = new CustomViewProvider(rootPath);</span><br><span class=\"line\">  vscode.window.registerTreeDataProvider(&#x27;customViewId&#x27;, customViewProvider);</span><br><span class=\"line\">  vscode.commands.registerCommand(&#x27;customView.refreshEntry&#x27;, () =&gt;</span><br><span class=\"line\">    customViewProvider.refresh()</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"refresh-通过按钮来触发-在contributions里增加下面配置\"><a href=\"#refresh-通过按钮来触发-在contributions里增加下面配置\" class=\"headerlink\" title=\"refresh 通过按钮来触发: 在contributions里增加下面配置\"></a>refresh 通过按钮来触发: 在contributions里增加下面配置</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;view/title&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;customView.refreshEntry&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == customViewId&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"激活插件-在package-json注册激活事件\"><a href=\"#激活插件-在package-json注册激活事件\" class=\"headerlink\" title=\"激活插件: 在package.json注册激活事件\"></a>激活插件: 在package.json注册激活事件</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;onView:customViewId&quot;</span>,</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"View-Container\"><a href=\"#View-Container\" class=\"headerlink\" title=\"View Container\"></a>View Container</h2><p>view Container包含两部分： 活动栏或面板中显示的视图列表以及内置的视图容器<br>内置视图容器的示例是源代码管理和资源管理器。</p>\n<h3 id=\"register-View-Container-in-contributes-viewsContainers\"><a href=\"#register-View-Container-in-contributes-viewsContainers\" class=\"headerlink\" title=\"register View Container in contributes.viewsContainers\"></a>register View Container in contributes.viewsContainers</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;viewsContainers&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;activitybar&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;package-explorer&quot;</span>, <span class=\"comment\">// The name of the new view container you&#x27;re creating.</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Package Explorer&quot;</span>, <span class=\"comment\">// The name that will show up at the top of the view container.</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;media/dep.svg&quot;</span> <span class=\"comment\">//  An image that will be displayed for the view container when in the Activity Bar.</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>你也可以注册到panel下</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;viewsContainers&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;panel&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;package-explorer&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Package Explorer&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;media/dep.svg&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Contributing-views-to-View-Containers\"><a href=\"#Contributing-views-to-View-Containers\" class=\"headerlink\" title=\"Contributing views to View Containers\"></a>Contributing views to View Containers</h3><p>可以把view挂载到view Containers</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;views&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;package-explorer&quot;</span>: [ <span class=\"comment\">// key是view container id</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;nodeDependencies&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;Node Dependencies&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;media/dep.svg&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;contextualTitle&quot;</span>: <span class=\"string\">&quot;Package Explorer&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以设置view的可见性：<code>visibility: visible/collapsed/ hidden;</code> 仅在第一次使用此视图打开工作区时，VS Code 才会尊重此属性</p>\n<h2 id=\"View-Actions-视图交互\"><a href=\"#View-Actions-视图交互\" class=\"headerlink\" title=\"View Actions: 视图交互\"></a>View Actions: 视图交互</h2><p>通过在package.json中添加contributions<br>可以添加交互的位置，共三个：</p>\n<p>1- <code>view/title</code>: 主要操作添加配置<code>&quot;group&quot;: &quot;navigation&quot;</code>, 次要操作在<code>...</code>内<br>2- <code>view/item/context</code>:<br>Location to show actions for the tree item. Inline actions use “group”: “inline” and rest are secondary actions, which are in … menu.</p>\n<p><img src=\"%22../../public/css/images/vscode-view-action.png%22\" alt=\"vscode-action\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.refreshEntry&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Refresh&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;icon&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;light&quot;</span>: <span class=\"string\">&quot;resources/light/refresh.svg&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;dark&quot;</span>: <span class=\"string\">&quot;resources/dark/refresh.svg&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.addEntry&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Add&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.editEntry&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Edit&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;icon&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;light&quot;</span>: <span class=\"string\">&quot;resources/light/edit.svg&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;dark&quot;</span>: <span class=\"string\">&quot;resources/dark/edit.svg&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.deleteEntry&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Delete&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;view/title&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.refreshEntry&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == nodeDependencies&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.addEntry&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == nodeDependencies&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">&quot;view/item/context&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.editEntry&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == nodeDependencies &amp;&amp; viewItem == dependency&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;inline&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.deleteEntry&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == nodeDependencies &amp;&amp; viewItem == dependency&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"新增custrom-view-containers\"><a href=\"#新增custrom-view-containers\" class=\"headerlink\" title=\"新增custrom view containers\"></a>新增custrom view containers</h2><h3 id=\"1-在package-json内部添加-contributes-views\"><a href=\"#1-在package-json内部添加-contributes-views\" class=\"headerlink\" title=\"1- 在package.json内部添加 contributes.views\"></a>1- 在package.json内部添加 contributes.views</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;views&quot;</span>: &#123; <span class=\"comment\">// the view showed in sideBar</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;custom-view&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;customViewId&quot;</span>,</span><br><span class=\"line\">              <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;view title show &quot;</span>,</span><br><span class=\"line\">              <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;media/transfer.svg&quot;</span>,</span><br><span class=\"line\">              <span class=\"attr\">&quot;contextualTitle&quot;</span>: <span class=\"string\">&quot;custom view&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">&quot;viewsContainers&quot;</span>: &#123; <span class=\"comment\">// when the view show</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;activitybar&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;containerId&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;hover msg&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;img url&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>添加好上面的配置， 启动插件， 就会在active bar 看到一个图标，点击后会在sideBar看到配置的view<br>现在还是空白的。</p>\n<h3 id=\"2-给view提供数据-create-a-TreeDataProvider\"><a href=\"#2-给view提供数据-create-a-TreeDataProvider\" class=\"headerlink\" title=\"2- 给view提供数据: create a TreeDataProvider\"></a>2- 给view提供数据: create a TreeDataProvider</h3><p>一定会使用到的apis</p>\n<p>1- <code>getChildren(element?: T): ProviderResult&lt;T[]&gt;</code>: 获取指定element/root的子元素</p>\n<p>2- <code>getTreeItem(element: T): TreeItem | Thenable&lt;TreeItem&gt;</code>: 获取在视图中显示的元素的 UI（TreeItem)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default CustomViewProvider implements vscode.ThreeDataProvider&lt;TreeData&gt; &#123;</span><br><span class=\"line\">    constructor(private workspaceRoot: string) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    getTreeItem(element: TreeData): vscode.TreeItem &#123;</span><br><span class=\"line\">        // 获取展示数据的容器</span><br><span class=\"line\">        return element;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    getChildren(element: TreeData) Thenable&lt;TreeData[]&gt;  &#123;</span><br><span class=\"line\">        // 获取展示数据</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class TreeData extends vscode.TreeItem &#123;</span><br><span class=\"line\">    constructor(</span><br><span class=\"line\">        public readonly collapsibleState: vscode.TreeItemCollapsibleState</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">        super(collapsibleState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">````</span><br><span class=\"line\"></span><br><span class=\"line\">### 3- Registering the TreeDataProvider to your view</span><br><span class=\"line\"></span><br><span class=\"line\">有两种方法可以实现：</span><br><span class=\"line\"></span><br><span class=\"line\">1- ```vscode.window.registerThreeDataProvider```: 通过viewId 和上面的TreeDataProvider来注册</span><br><span class=\"line\"></span><br><span class=\"line\">Register the tree data provider by providing the registered view ID and above data provider.</span><br><span class=\"line\"></span><br><span class=\"line\">```react</span><br><span class=\"line\">const rootPath = vscode.workspace.workspaceFolders &amp;&amp; vscode.workspace.workspaceFolders.length &gt; 0 &amp;&amp;</span><br><span class=\"line\">  vscode.workspace.workspaceFolders[0].uri.fsPath : undefined</span><br><span class=\"line\"></span><br><span class=\"line\">vscode.window.registerThreeDataProvider(</span><br><span class=\"line\">    &quot;customViewId&quot;,</span><br><span class=\"line\">    new CustomViewProvider(rootPath)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>2- <code>vscode.window.createTreeView</code>:根据 viewId and data provider创建treeView</p>\n<p>Create the Tree View by providing the registered view ID and above data provider.<br>This will give access to the TreeView, which you can use for performing other view operations.<br>Use createTreeView, if you need the TreeView API.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.window.createTreeView(&#x27;customViewId&#x27;, &#123;</span><br><span class=\"line\">    treeDataProvider: new CustomViewProvider(rootPath)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"更新Tree-view-content-refresh\"><a href=\"#更新Tree-view-content-refresh\" class=\"headerlink\" title=\"更新Tree view content(refresh)\"></a>更新Tree view content(refresh)</h3><p>use <code>onDidChangeTreeData</code> event</p>\n<p><code>onDidChangeTreeData?: Event&lt;T | undefined | null | void&gt;</code></p>\n<p>Implement this if your tree data can change and you want to update the treeview.</p>\n<p>Add the following to your CustomViewProvider.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private _onDidChangeTreeData: vscode.EventEmitter&lt;Dependency | undefined | null | void&gt; = new vscode.EventEmitter&lt;Dependency | undefined | null | void&gt;();</span><br><span class=\"line\">readonly onDidChangeTreeData: vscode.Event&lt;Dependency | undefined | null | void&gt; = this._onDidChangeTreeData.event;</span><br><span class=\"line\"></span><br><span class=\"line\">refresh(): void &#123;</span><br><span class=\"line\">  this._onDidChangeTreeData.fire();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>We can add a command to call refresh.</p>\n<p>In the contributes section of your package.json, add:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;customView.refreshEntry&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Refresh&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;icon&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;light&quot;</span>: <span class=\"string\">&quot;resources/light/refresh.svg&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;dark&quot;</span>: <span class=\"string\">&quot;resources/dark/refresh.svg&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"注册插件\"><a href=\"#注册插件\" class=\"headerlink\" title=\"注册插件\"></a>注册插件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import * as vscode from &#x27;vscode&#x27;;</span><br><span class=\"line\">import &#123; CustomViewProvider &#125; from &#x27;./customViewProvider&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">export function activate(context: vscode.ExtensionContext) &#123;</span><br><span class=\"line\">  const rootPath =</span><br><span class=\"line\">    vscode.workspace.workspaceFolders &amp;&amp; vscode.workspace.workspaceFolders.length &gt; 0</span><br><span class=\"line\">      ? vscode.workspace.workspaceFolders[0].uri.fsPath</span><br><span class=\"line\">      : undefined;</span><br><span class=\"line\">  const customViewProvider = new CustomViewProvider(rootPath);</span><br><span class=\"line\">  vscode.window.registerTreeDataProvider(&#x27;customViewId&#x27;, customViewProvider);</span><br><span class=\"line\">  vscode.commands.registerCommand(&#x27;customView.refreshEntry&#x27;, () =&gt;</span><br><span class=\"line\">    customViewProvider.refresh()</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"refresh-通过按钮来触发-在contributions里增加下面配置\"><a href=\"#refresh-通过按钮来触发-在contributions里增加下面配置\" class=\"headerlink\" title=\"refresh 通过按钮来触发: 在contributions里增加下面配置\"></a>refresh 通过按钮来触发: 在contributions里增加下面配置</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;view/title&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;customView.refreshEntry&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == customViewId&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"激活插件-在package-json注册激活事件\"><a href=\"#激活插件-在package-json注册激活事件\" class=\"headerlink\" title=\"激活插件: 在package.json注册激活事件\"></a>激活插件: 在package.json注册激活事件</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;activationEvents&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;onView:customViewId&quot;</span>,</span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"View-Container\"><a href=\"#View-Container\" class=\"headerlink\" title=\"View Container\"></a>View Container</h2><p>view Container包含两部分： 活动栏或面板中显示的视图列表以及内置的视图容器<br>内置视图容器的示例是源代码管理和资源管理器。</p>\n<h3 id=\"register-View-Container-in-contributes-viewsContainers\"><a href=\"#register-View-Container-in-contributes-viewsContainers\" class=\"headerlink\" title=\"register View Container in contributes.viewsContainers\"></a>register View Container in contributes.viewsContainers</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;viewsContainers&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;activitybar&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;package-explorer&quot;</span>, <span class=\"comment\">// The name of the new view container you&#x27;re creating.</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Package Explorer&quot;</span>, <span class=\"comment\">// The name that will show up at the top of the view container.</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;media/dep.svg&quot;</span> <span class=\"comment\">//  An image that will be displayed for the view container when in the Activity Bar.</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>你也可以注册到panel下</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;viewsContainers&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;panel&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;package-explorer&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Package Explorer&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;media/dep.svg&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Contributing-views-to-View-Containers\"><a href=\"#Contributing-views-to-View-Containers\" class=\"headerlink\" title=\"Contributing views to View Containers\"></a>Contributing views to View Containers</h3><p>可以把view挂载到view Containers</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;views&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;package-explorer&quot;</span>: [ <span class=\"comment\">// key是view container id</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;nodeDependencies&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;Node Dependencies&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;icon&quot;</span>: <span class=\"string\">&quot;media/dep.svg&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;contextualTitle&quot;</span>: <span class=\"string\">&quot;Package Explorer&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以设置view的可见性：<code>visibility: visible/collapsed/ hidden;</code> 仅在第一次使用此视图打开工作区时，VS Code 才会尊重此属性</p>\n<h2 id=\"View-Actions-视图交互\"><a href=\"#View-Actions-视图交互\" class=\"headerlink\" title=\"View Actions: 视图交互\"></a>View Actions: 视图交互</h2><p>通过在package.json中添加contributions<br>可以添加交互的位置，共三个：</p>\n<p>1- <code>view/title</code>: 主要操作添加配置<code>&quot;group&quot;: &quot;navigation&quot;</code>, 次要操作在<code>...</code>内<br>2- <code>view/item/context</code>:<br>Location to show actions for the tree item. Inline actions use “group”: “inline” and rest are secondary actions, which are in … menu.</p>\n<p><img src=\"%22../../public/css/images/vscode-view-action.png%22\" alt=\"vscode-action\"></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;contributes&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;commands&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.refreshEntry&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Refresh&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;icon&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;light&quot;</span>: <span class=\"string\">&quot;resources/light/refresh.svg&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;dark&quot;</span>: <span class=\"string\">&quot;resources/dark/refresh.svg&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.addEntry&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Add&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.editEntry&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Edit&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;icon&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;light&quot;</span>: <span class=\"string\">&quot;resources/light/edit.svg&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;dark&quot;</span>: <span class=\"string\">&quot;resources/dark/edit.svg&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.deleteEntry&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;title&quot;</span>: <span class=\"string\">&quot;Delete&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">&quot;menus&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;view/title&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.refreshEntry&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == nodeDependencies&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;navigation&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.addEntry&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == nodeDependencies&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">&quot;view/item/context&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.editEntry&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == nodeDependencies &amp;&amp; viewItem == dependency&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;group&quot;</span>: <span class=\"string\">&quot;inline&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;nodeDependencies.deleteEntry&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;when&quot;</span>: <span class=\"string\">&quot;view == nodeDependencies &amp;&amp; viewItem == dependency&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"RESTful 架构","date":"2022-03-23T03:08:15.000Z","_content":"\n## REST\n\nRepresentational State Transfer\n\n- 资源（Resources): 信息实体， 每个资源有独一无二的标识符URI， 可以通过URI（统一资源定位符）访问资源\n- 表现层（Representation): 资源表现出来的形式， exp: text, html, xml, png等这个不同的文件类型都是资源的表现形式\n我们在请求资源的时候通常会通过http请求，```http://xxx.com/xx/xxx.html```， 这边的后缀是可以省略的，真正决定资源表现形式的是http请求头里的\n```Accept``` 和 ```Content-Type```字段\n\n## 特点\n\nRESTFUL特点包括：\n1、每一个URI代表1种资源；\n2、客户端使用GET、POST、PUT、DELETE4个表示操作方式的动词对服务端资源进行操作：GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源；\n3、通过操作资源的表现形式来操作资源；\n4、资源的表现形式是XML或者HTML；\n5、客户端与服务端之间的交互在请求之间是无状态的，从客户端到服务端的每个请求都必须包含理解请求所必需的信息。\n\n## 总结\n\nRESTful 架构简单理解就是对Http传输URI的一种规范\nRESTful架构是对MVC架构改进后所形成的一种架构，通过使用事先定义好的接口与不同的服务联系起来。在RESTful架构中，浏览器使用POST，DELETE，PUT和GET四种请求方式分别对指定的URL资源进行增删改查操作。因此，RESTful是通过URI实现对资源的管理及访问，具有扩展性强、结构清晰的特点。\n\nRESTful架构将服务器分成前端服务器和后端服务器两部分，前端服务器为用户提供无模型的视图；后端服务器为前端服务器提供接口。浏览器向前端服务器请求视图，通过视图中包含的AJAX函数发起接口请求获取模型。\n\n项目开发引入RESTful架构，利于团队并行开发。在RESTful架构中，将多数HTTP请求转移到前端服务器上，降低服务器的负荷，使视图获取后端模型失败也能呈现。但RESTful架构却不适用于所有的项目，当项目比较小时无需使用RESTful架构，项目变得更加复杂。\n\n![RESTful架构](../../public/css/images/RESTful架构.jpeg)\n\n","source":"_posts/RESTful-架构.md","raw":"---\ntitle: RESTful 架构\ndate: 2022-03-23 11:08:15\ntags: RESTful, 架构\n---\n\n## REST\n\nRepresentational State Transfer\n\n- 资源（Resources): 信息实体， 每个资源有独一无二的标识符URI， 可以通过URI（统一资源定位符）访问资源\n- 表现层（Representation): 资源表现出来的形式， exp: text, html, xml, png等这个不同的文件类型都是资源的表现形式\n我们在请求资源的时候通常会通过http请求，```http://xxx.com/xx/xxx.html```， 这边的后缀是可以省略的，真正决定资源表现形式的是http请求头里的\n```Accept``` 和 ```Content-Type```字段\n\n## 特点\n\nRESTFUL特点包括：\n1、每一个URI代表1种资源；\n2、客户端使用GET、POST、PUT、DELETE4个表示操作方式的动词对服务端资源进行操作：GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源；\n3、通过操作资源的表现形式来操作资源；\n4、资源的表现形式是XML或者HTML；\n5、客户端与服务端之间的交互在请求之间是无状态的，从客户端到服务端的每个请求都必须包含理解请求所必需的信息。\n\n## 总结\n\nRESTful 架构简单理解就是对Http传输URI的一种规范\nRESTful架构是对MVC架构改进后所形成的一种架构，通过使用事先定义好的接口与不同的服务联系起来。在RESTful架构中，浏览器使用POST，DELETE，PUT和GET四种请求方式分别对指定的URL资源进行增删改查操作。因此，RESTful是通过URI实现对资源的管理及访问，具有扩展性强、结构清晰的特点。\n\nRESTful架构将服务器分成前端服务器和后端服务器两部分，前端服务器为用户提供无模型的视图；后端服务器为前端服务器提供接口。浏览器向前端服务器请求视图，通过视图中包含的AJAX函数发起接口请求获取模型。\n\n项目开发引入RESTful架构，利于团队并行开发。在RESTful架构中，将多数HTTP请求转移到前端服务器上，降低服务器的负荷，使视图获取后端模型失败也能呈现。但RESTful架构却不适用于所有的项目，当项目比较小时无需使用RESTful架构，项目变得更加复杂。\n\n![RESTful架构](../../public/css/images/RESTful架构.jpeg)\n\n","slug":"RESTful-架构","published":1,"updated":"2022-03-23T03:37:35.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl130nx61000024gsdu8bb8sa","content":"<h2 id=\"REST\"><a href=\"#REST\" class=\"headerlink\" title=\"REST\"></a>REST</h2><p>Representational State Transfer</p>\n<ul>\n<li>资源（Resources): 信息实体， 每个资源有独一无二的标识符URI， 可以通过URI（统一资源定位符）访问资源</li>\n<li>表现层（Representation): 资源表现出来的形式， exp: text, html, xml, png等这个不同的文件类型都是资源的表现形式<br>我们在请求资源的时候通常会通过http请求，<code>http://xxx.com/xx/xxx.html</code>， 这边的后缀是可以省略的，真正决定资源表现形式的是http请求头里的<br><code>Accept</code> 和 <code>Content-Type</code>字段</li>\n</ul>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><p>RESTFUL特点包括：<br>1、每一个URI代表1种资源；<br>2、客户端使用GET、POST、PUT、DELETE4个表示操作方式的动词对服务端资源进行操作：GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源；<br>3、通过操作资源的表现形式来操作资源；<br>4、资源的表现形式是XML或者HTML；<br>5、客户端与服务端之间的交互在请求之间是无状态的，从客户端到服务端的每个请求都必须包含理解请求所必需的信息。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>RESTful 架构简单理解就是对Http传输URI的一种规范<br>RESTful架构是对MVC架构改进后所形成的一种架构，通过使用事先定义好的接口与不同的服务联系起来。在RESTful架构中，浏览器使用POST，DELETE，PUT和GET四种请求方式分别对指定的URL资源进行增删改查操作。因此，RESTful是通过URI实现对资源的管理及访问，具有扩展性强、结构清晰的特点。</p>\n<p>RESTful架构将服务器分成前端服务器和后端服务器两部分，前端服务器为用户提供无模型的视图；后端服务器为前端服务器提供接口。浏览器向前端服务器请求视图，通过视图中包含的AJAX函数发起接口请求获取模型。</p>\n<p>项目开发引入RESTful架构，利于团队并行开发。在RESTful架构中，将多数HTTP请求转移到前端服务器上，降低服务器的负荷，使视图获取后端模型失败也能呈现。但RESTful架构却不适用于所有的项目，当项目比较小时无需使用RESTful架构，项目变得更加复杂。</p>\n<p><img src=\"../../public/css/images/RESTful%E6%9E%B6%E6%9E%84.jpeg\" alt=\"RESTful架构\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"REST\"><a href=\"#REST\" class=\"headerlink\" title=\"REST\"></a>REST</h2><p>Representational State Transfer</p>\n<ul>\n<li>资源（Resources): 信息实体， 每个资源有独一无二的标识符URI， 可以通过URI（统一资源定位符）访问资源</li>\n<li>表现层（Representation): 资源表现出来的形式， exp: text, html, xml, png等这个不同的文件类型都是资源的表现形式<br>我们在请求资源的时候通常会通过http请求，<code>http://xxx.com/xx/xxx.html</code>， 这边的后缀是可以省略的，真正决定资源表现形式的是http请求头里的<br><code>Accept</code> 和 <code>Content-Type</code>字段</li>\n</ul>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><p>RESTFUL特点包括：<br>1、每一个URI代表1种资源；<br>2、客户端使用GET、POST、PUT、DELETE4个表示操作方式的动词对服务端资源进行操作：GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源；<br>3、通过操作资源的表现形式来操作资源；<br>4、资源的表现形式是XML或者HTML；<br>5、客户端与服务端之间的交互在请求之间是无状态的，从客户端到服务端的每个请求都必须包含理解请求所必需的信息。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>RESTful 架构简单理解就是对Http传输URI的一种规范<br>RESTful架构是对MVC架构改进后所形成的一种架构，通过使用事先定义好的接口与不同的服务联系起来。在RESTful架构中，浏览器使用POST，DELETE，PUT和GET四种请求方式分别对指定的URL资源进行增删改查操作。因此，RESTful是通过URI实现对资源的管理及访问，具有扩展性强、结构清晰的特点。</p>\n<p>RESTful架构将服务器分成前端服务器和后端服务器两部分，前端服务器为用户提供无模型的视图；后端服务器为前端服务器提供接口。浏览器向前端服务器请求视图，通过视图中包含的AJAX函数发起接口请求获取模型。</p>\n<p>项目开发引入RESTful架构，利于团队并行开发。在RESTful架构中，将多数HTTP请求转移到前端服务器上，降低服务器的负荷，使视图获取后端模型失败也能呈现。但RESTful架构却不适用于所有的项目，当项目比较小时无需使用RESTful架构，项目变得更加复杂。</p>\n<p><img src=\"../../public/css/images/RESTful%E6%9E%B6%E6%9E%84.jpeg\" alt=\"RESTful架构\"></p>\n"},{"title":"状态管理工具使用的总结","date":"2022-03-28T08:37:56.000Z","_content":"\n## 什么场景需要使用状态管理工具？\n\n- 用户的使用方式很复杂\n\n- 不同身份的用户有不同的使用方式（比如普通用户和管理员）\n\n- 多个用户之间可以协作\n\n- 与服务器大量交互，或者使用了WebSocket\n\n- View要从多个来源获取数据\n\n**总结： 多交互，多数据源**\n\n组件角度，如何判断是否需要使用状态管理工具？\n\n- 某个组件的状态需要共享\n- 某个状态需要在任何地方都可以拿到\n- 一个组件需要改变全局状态\n- 一个组件需要改变另一个组件的状态\n\n业务场景的例子： 一个可视化编辑器的页面， 多个input输入框，多个select/option组件，都是在对json文件进行修改\n\n这个场景需要在同一个地方查询状态、改变状态、传播状态的变化\n\n","source":"_posts/状态管理工具总结和比较.md","raw":"---\ntitle: 状态管理工具使用的总结\ndate: 2022-03-28 16:37:56\ntags: 状态管理工具，redux, flux\n---\n\n## 什么场景需要使用状态管理工具？\n\n- 用户的使用方式很复杂\n\n- 不同身份的用户有不同的使用方式（比如普通用户和管理员）\n\n- 多个用户之间可以协作\n\n- 与服务器大量交互，或者使用了WebSocket\n\n- View要从多个来源获取数据\n\n**总结： 多交互，多数据源**\n\n组件角度，如何判断是否需要使用状态管理工具？\n\n- 某个组件的状态需要共享\n- 某个状态需要在任何地方都可以拿到\n- 一个组件需要改变全局状态\n- 一个组件需要改变另一个组件的状态\n\n业务场景的例子： 一个可视化编辑器的页面， 多个input输入框，多个select/option组件，都是在对json文件进行修改\n\n这个场景需要在同一个地方查询状态、改变状态、传播状态的变化\n\n","slug":"状态管理工具总结和比较","published":1,"updated":"2022-04-18T10:18:38.236Z","_id":"cl1ah2yjy0000b8x3g6l588yi","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"什么场景需要使用状态管理工具？\"><a href=\"#什么场景需要使用状态管理工具？\" class=\"headerlink\" title=\"什么场景需要使用状态管理工具？\"></a>什么场景需要使用状态管理工具？</h2><ul>\n<li><p>用户的使用方式很复杂</p>\n</li>\n<li><p>不同身份的用户有不同的使用方式（比如普通用户和管理员）</p>\n</li>\n<li><p>多个用户之间可以协作</p>\n</li>\n<li><p>与服务器大量交互，或者使用了WebSocket</p>\n</li>\n<li><p>View要从多个来源获取数据</p>\n</li>\n</ul>\n<p><strong>总结： 多交互，多数据源</strong></p>\n<p>组件角度，如何判断是否需要使用状态管理工具？</p>\n<ul>\n<li>某个组件的状态需要共享</li>\n<li>某个状态需要在任何地方都可以拿到</li>\n<li>一个组件需要改变全局状态</li>\n<li>一个组件需要改变另一个组件的状态</li>\n</ul>\n<p>业务场景的例子： 一个可视化编辑器的页面， 多个input输入框，多个select/option组件，都是在对json文件进行修改</p>\n<p>这个场景需要在同一个地方查询状态、改变状态、传播状态的变化</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么场景需要使用状态管理工具？\"><a href=\"#什么场景需要使用状态管理工具？\" class=\"headerlink\" title=\"什么场景需要使用状态管理工具？\"></a>什么场景需要使用状态管理工具？</h2><ul>\n<li><p>用户的使用方式很复杂</p>\n</li>\n<li><p>不同身份的用户有不同的使用方式（比如普通用户和管理员）</p>\n</li>\n<li><p>多个用户之间可以协作</p>\n</li>\n<li><p>与服务器大量交互，或者使用了WebSocket</p>\n</li>\n<li><p>View要从多个来源获取数据</p>\n</li>\n</ul>\n<p><strong>总结： 多交互，多数据源</strong></p>\n<p>组件角度，如何判断是否需要使用状态管理工具？</p>\n<ul>\n<li>某个组件的状态需要共享</li>\n<li>某个状态需要在任何地方都可以拿到</li>\n<li>一个组件需要改变全局状态</li>\n<li>一个组件需要改变另一个组件的状态</li>\n</ul>\n<p>业务场景的例子： 一个可视化编辑器的页面， 多个input输入框，多个select/option组件，都是在对json文件进行修改</p>\n<p>这个场景需要在同一个地方查询状态、改变状态、传播状态的变化</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckys47naz0001c9wo23sp2k25","tag_id":"ckys47nb00003c9wohwffhj8g","_id":"ckys47nb20008c9wo4oj80m5t"},{"post_id":"ckys47nb00002c9wo3lqu1f43","tag_id":"ckys47nb20007c9wo97i4dzob","_id":"ckys47nb2000ac9woas2jd5h0"},{"post_id":"ckys47nb10005c9woho5bbb4e","tag_id":"ckys47nb20009c9wohil246i7","_id":"ckys47nb3000cc9woaczf7wjf"},{"post_id":"ckys47nb20006c9wo3v5n75z6","tag_id":"ckys47nb2000bc9woduvbe85j","_id":"ckys47nb3000dc9wo0fzwfdvn"},{"post_id":"cl0kfdngl00007twp0th85jem","tag_id":"cl0kfdngo00027twpf9z2hpek","_id":"cl0kfdngp00047twpdf91ca1d"},{"post_id":"cl0kfdngn00017twp6dlr8vnq","tag_id":"cl0kfdngp00037twpgydfedsz","_id":"cl0kfdngq00057twpgeyx8fv2"},{"post_id":"cl130nx61000024gsdu8bb8sa","tag_id":"cl130nx64000124gsdmc6ai4m","_id":"cl130nx66000224gsgzghfqsc"},{"post_id":"cl1ah2yjy0000b8x3g6l588yi","tag_id":"cl1ah2yk10001b8x3ekwkdkvh","_id":"cl1ah2yk20002b8x3anar9hys"}],"Tag":[{"name":"vscode, extensions, webview","_id":"ckys47nb00003c9wohwffhj8g"},{"name":"viscose, extension, 跳转到定义, 自动补全, 悬停提示","_id":"ckys47nb20007c9wo97i4dzob"},{"name":"vscode, extensions, publish, package","_id":"ckys47nb20009c9wohil246i7"},{"name":"git, hexo","_id":"ckys47nb2000bc9woduvbe85j"},{"name":"class, extends and implements","_id":"cl0kfdngo00027twpf9z2hpek"},{"name":"vs-extension","_id":"cl0kfdngp00037twpgydfedsz"},{"name":"RESTful, 架构","_id":"cl130nx64000124gsdmc6ai4m"},{"name":"状态管理工具，redux, flux","_id":"cl1ah2yk10001b8x3ekwkdkvh"}]}}